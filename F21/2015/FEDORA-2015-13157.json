{
	"alias": "FEDORA-2015-13157",
	"bugs": [
		{
			"bug_id": 1154067,
			"title": "[rpmbuild] warning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$",
			"bugzilla": {
				"bug_id": "1154067",
				"creation_ts": "2014-10-17 12:37:21 +0000",
				"short_desc": "[rpmbuild] warning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$",
				"delta_ts": "2015-08-19 08:17:03 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Reopened",
				"priority": "low",
				"bug_severity": "low",
				"blocked": [
					{
						"bug_id": "1193021",
						"creation_ts": "2015-02-16 12:01:00 +0000",
						"short_desc": "[rpmbuild] Provide better implementation/documentation for generator path matching.",
						"delta_ts": "2015-04-10 12:20:46 +0000",
						"bug_status": "CLOSED",
						"resolution": "UPSTREAM",
						"priority": "low",
						"bug_severity": "low",
						"depends_on": [
							"1154067"
						],
						"long_desc": [
							{
								"isprivate": "0",
								"commentid": "7941086",
								"comment_count": "0",
								"who": {
									"text": "vondruch",
									"name": "Vít Ondruch"
								},
								"bug_when": "2015-02-16 12:01:00 +0000",
								"thetext": "Could you please update implementation/documentation to better handle pattern matching in .attr files as described in Bug #1154067 ? The solution used in Ruby [1] is very ughly IMO\n\n\n[1] http://pkgs.fedoraproject.org/cgit/ruby.git/commit/?id=4375d5ca30bd504cc01fef2239e430db2f5b23a1\n\n\n\n\n\n+++ This bug was initially created as a clone of Bug #1154067 +++\n\nDescription of problem:\nRecently I started to see in rpmbuild output line:\n\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nwhere 0.5.0 is version of package, which is building right now.\nIt is likely some manipulation of this macro:\n$ rpm --showrc |grep specificat\n-14: gem_spec   %{gem_dir}/specifications/%{gem_name}-%{version}.gemspec\nin some hook, but I do not see any such localy defined in /etc/rpm or /usr/lib/rpm/macros.d\n\nVersion-Release number of selected component (if applicable):\nrpm-build-4.12.0.1-2.fc21.x86_64\n\nHow reproducible:\nalways\n\nSteps to Reproduce:\n1. rpmbuild --rebuild /tmp/tito/tracer-0.5.0-1.git.9.a24255c.fc21.src.rpm  (happen to me with every package)\n\nActual results:\n...\nExecuting(%doc): /bin/sh -e /var/tmp/rpm-tmp.wtY87E\n+ umask 022\n+ cd /home/msuchy/rpmbuild/BUILD\n+ cd tracer-git-9.a24255c\n+ DOCDIR=/home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ export DOCDIR\n+ /usr/bin/mkdir -p /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ cp -pr LICENSE /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ cp -pr README.md /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ exit 0\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\nProvides: tracer = 0.5.0-1.git.9.a24255c.fc21\nRequires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PartialHardlinkSets) <= 4.0.4-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1\nRequires: /usr/bin/python python(abi) = 2.7\nProcessing files: dnf-tracer-plugin-0.5.0-1.git.9.a24255c.fc21.noarch\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\nProvides: dnf-tracer-plugin = 0.5.0-1.git.9.a24255c.fc21\nRequires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PartialHardlinkSets) <= 4.0.4-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1\nRequires: python(abi) = 2.7\nChecking for unpackaged file(s): /usr/lib/rpm/check-files /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64\nWrote: /home/msuchy/rpmbuild/RPMS/noarch/tracer-0.5.0-1.git.9.a24255c.fc21.noarch.rpm\nWrote: /home/msuchy/rpmbuild/RPMS/noarch/dnf-tracer-plugin-0.5.0-1.git.9.a24255c.fc21.noarch.rpm\nExecuting(%clean): /bin/sh -e /var/tmp/rpm-tmp.yJNpQk\n+ umask 022\n....\n\nExpected results:\nno warning about gemspec especially if this is not ruby package.\n\n--- Additional comment from Panu Matilainen on 2014-10-17 14:46:27 CEST ---\n\nRpm doesn't know the damnest thing about gems and certainly does not define such macros. Rubygems should be closer to the mark.\n\n--- Additional comment from Vít Ondruch on 2014-10-17 15:13:45 CEST ---\n\nI have not tried it, but I guess that it might be issue for every package build (except rubygem- packages) in case that rubygems-devel is installed. This is the line which causes the issue:\n\nhttp://pkgs.fedoraproject.org/cgit/ruby.git/tree/rubygems.attr#n3\n\nSince the %{gem_name} is not defined for non rubygem- packages, the ^%{gem_spec}$ evaluates to:\n\n^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nNow the question is, how to workaround this. Is this something what can be fixed in Ruby?\n\n--- Additional comment from Miroslav Suchý on 2014-10-17 15:56:05 CEST ---\n\nThis:\n  %__rubygems_path        %{?gem_name:^%{gem_spec}$}\nshould the work.\n\n--- Additional comment from Vít Ondruch on 2014-10-17 16:07:02 CEST ---\n\nSilly me :) Thanks.\n\n--- Additional comment from Panu Matilainen on 2014-10-20 08:38:37 CEST ---\n\nThat will shut up the warning but it'll define %__rubygems_path to an empty string. While that doesn't seem to cause anything bad in the classifier... is there a reason that couldn't be something that matches .gemspec's regardless of %gem_name being defined or not, eg something like this?\n\n^/usr/share/gems/specifications/.*-0.5.0.gemspec$\n\n--- Additional comment from Vít Ondruch on 2014-10-20 09:40:32 CEST ---\n\nThat would match any possible .gemspec of the 0.5.0 version on the system, that is definitely not something we would like. Although it could be probably handled with some magic in the generator.\n\nOr we could expand it into some nonexisting path, to avoid the check entirely if that makes RPM happier.\n\nBut isn't there better way how to tell RPM that for this case, we want to disable this generator? Ruby's generator can't be the only one which suffers this issue. Actually this was the idea when I filled the original NEEDINFO.\n\n--- Additional comment from Panu Matilainen on 2014-10-20 09:48:17 CEST ---\n\nUm, those paths are only matched within the buildroot, you can't match anything from the system. So there's little point trying to mess with disabling/enabling these things.\n\n--- Additional comment from Vít Ondruch on 2014-10-20 10:25:43 CEST ---\n\nOk, so explicit \"enabling/disabling\" is no-go. What is better then:\n\n1) Empty string\n2) Matching nonexisting path\n\nFrom my POV the former sound right. RPM could ensure that if the %__rubygems_path is empty, the generator will be effectively disabled and no matching is done at all.\n\n--- Additional comment from Panu Matilainen on 2014-10-20 10:34:56 CEST ---\n\nStop for a minute please. I'm getting this feeling you're thinking/doing something \"backwards\" here and thats the reason it feels awkward and harder that it should be.\n\nWhy do you think you need to do something special disable magic with it? When there is a .gemspec in a built package, shouldn't it always match? If not, why?\n\n--- Additional comment from Vít Ondruch on 2014-10-20 11:08:42 CEST ---\n\nOk, so I'll try once more.\n\nIf you have rubygems-devel installed on your system, there is line [1]:\n\n%__rubygems_path\t^%{gem_spec}$\n\nThe %{gem_spec} macro [2] is defined as:\n\n%gem_spec %{gem_dir}/specifications/%{gem_name}-%{version}.gemspec\n\nWhere %{gem_dir} is static [3], %{version} is always defined in .spec and the %{gem_name} is expected to be defined in the .spec. However, while the %{gem_name} is defined for every rubygem- package, it not defined in any other package. So for non-rubygem package (in Miroslav's case), the %__rubygems_path expands to\n\n%__rubygems_path\t^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nwhich is invalid regexp. Miroslav proposed to check for existence of %{gem_name} and if it does not exist, expand the %__rubygems_path to empty string. I like this proposal and can't see any problems with it.\n\nOn the other hand, you expect to be problematic for some unknown reason and suggest to expand it into some different path, which probably does not exist in buildroot, but it might exist.\n\nSo why it should not be empty string? What is the issue with the empty string?\n\n\n[1] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/rubygems.attr#n3\n[2] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/macros.rubygems#n10\n[3] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/macros.rubygems#n2\n\n--- Additional comment from Panu Matilainen on 2014-10-20 11:16:19 CEST ---\n\nI'll answer your question(s) once you answer mine:\n\nWhy aren't you just using a wildcard for the .gemspec files (like everyone else does)?\n\nThat is how these rules are expected to be written, and that way you'll also get correct results from the external dependency generator mode which does not have access to spec internals like %{name} and %{version}. Which means its easier to test & debug the generator too because you can run it outside rpmbuild and get identical results.\n\n--- Additional comment from Panu Matilainen on 2014-10-20 11:40:03 CEST ---\n\n...or to put it in another way:\n\nYou're using the system against its design, so its fighting back. The file attributes are for matching *classes* of files, not a specific given file. If you think about it, the individual file approach does not exactly scale :)\nFor example the way its done now prevents packaging multiple rubygem subpackages from a single spec. Whether that matters or not for Fedora's Ruby packages I dont know.\n\n--- Additional comment from Vít Ondruch on 2014-10-20 13:40:09 CEST ---\n\nAh, now I finally got the comment #5. Actually I tried to be as specific as possible. That is the reason why there is the %{gem_name}.\n\n> For example the way its done now prevents packaging multiple rubygem\n> subpackages from a single spec. Whether that matters or not for Fedora's\n> Ruby packages I dont know.\n\nYou are right. On the other hand, if I for some reason install two gems into buildroot (may be planning to create two subpackages?) or I want to package just one at the end, I'll have the opposite problem, e.g. the dependencies will be generated from multiple .gemspecs instead the one I care. Not that I have any real life example at my hand, so this artificial point ...\n\nSo I'll go with the wildcard for the moment. However, I'd love to know why not empty string and I would appreciate, if the dependency generator documentation [1] could be extended to contain some paragraph about the empty string, wildcard and file *classes* you talk about in comment #11 and comment #12\n\n\n[1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n\n--- Additional comment from Panu Matilainen on 2014-10-20 14:11:53 CEST ---\n\n(In reply to Vít Ondruch from comment #13)\n> Ah, now I finally got the comment #5. Actually I tried to be as specific as\n> possible. That is the reason why there is the %{gem_name}.\n> \n> > For example the way its done now prevents packaging multiple rubygem\n> > subpackages from a single spec. Whether that matters or not for Fedora's\n> > Ruby packages I dont know.\n> \n> You are right. On the other hand, if I for some reason install two gems into\n> buildroot (may be planning to create two subpackages?) or I want to package\n> just one at the end, I'll have the opposite problem, e.g. the dependencies\n> will be generated from multiple .gemspecs instead the one I care. Not that I\n> have any real life example at my hand, so this artificial point ...\n\nDependencies are generated only for packaged files, and attached to the (sub)package a given file belongs to. So you're worrying over non-issues and in doing so, making life unnecessarily hard for yourself :)\n\n> \n> So I'll go with the wildcard for the moment. However, I'd love to know why\n> not empty string \n\nEmpty string *might* be harmless, but its also entirely non-sensical as a path pattern, and confusing to a random bypasser looking at it.\n\nYou dont want to resort to workarounds when a correct solution exists, that is why I wanted to hear the reasons behind this setup. \n\n> and I would appreciate, if the dependency generator\n> documentation [1] could be extended to contain some paragraph about the\n> empty string, wildcard and file *classes* you talk about in comment #11 and\n> comment #12\n> \n> [1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n\nNod, in the light of this discussion its clear that document is severely lacking in the description of the bigger picture (some might say design).\n\n--- Additional comment from Vít Ondruch on 2014-10-20 15:25:39 CEST ---\n\n(In reply to Panu Matilainen from comment #14)\n> (In reply to Vít Ondruch from comment #13)\n> > Ah, now I finally got the comment #5. Actually I tried to be as specific as\n> > possible. That is the reason why there is the %{gem_name}.\n> > \n> > > For example the way its done now prevents packaging multiple rubygem\n> > > subpackages from a single spec. Whether that matters or not for Fedora's\n> > > Ruby packages I dont know.\n> > \n> > You are right. On the other hand, if I for some reason install two gems into\n> > buildroot (may be planning to create two subpackages?) or I want to package\n> > just one at the end, I'll have the opposite problem, e.g. the dependencies\n> > will be generated from multiple .gemspecs instead the one I care. Not that I\n> > have any real life example at my hand, so this artificial point ...\n> \n> Dependencies are generated only for packaged files, and attached to the\n> (sub)package a given file belongs to. So you're worrying over non-issues and\n> in doing so, making life unnecessarily hard for yourself :)\n\nThanks for clarification.\n\n> > So I'll go with the wildcard for the moment. However, I'd love to know why\n> > not empty string \n> \n> Empty string *might* be harmless, but its also entirely non-sensical as a\n> path pattern, and confusing to a random bypasser looking at it.\n\nIt seems that for me and Miroslav, the empty string is acceptable and understandable. So may be something you could (re)consider ... Actually, not sure how the matching is done internally, but I'm bit afraid that empty string might match everything, what would be even less expected.\n\n> You dont want to resort to workarounds when a correct solution exists, that\n> is why I wanted to hear the reasons behind this setup. \n> \n> > and I would appreciate, if the dependency generator\n> > documentation [1] could be extended to contain some paragraph about the\n> > empty string, wildcard and file *classes* you talk about in comment #11 and\n> > comment #12\n> > \n> > [1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n> \n> Nod, in the light of this discussion its clear that document is severely\n> lacking in the description of the bigger picture (some might say design).\n\nThanks!\n\n--- Additional comment from Panu Matilainen on 2014-10-20 15:39:46 CEST ---\n\n(In reply to Vít Ondruch from comment #15)\n> (In reply to Panu Matilainen from comment #14)\n> > Empty string *might* be harmless, but its also entirely non-sensical as a\n> > path pattern, and confusing to a random bypasser looking at it.\n> \n> It seems that for me and Miroslav, the empty string is acceptable and\n> understandable. So may be something you could (re)consider ... Actually, not\n> sure how the matching is done internally, but I'm bit afraid that empty\n> string might match everything, what would be even less expected.\n\nThat's pretty much my point: an empty string as a path is ambiguous at best.\nIf anything I might consider making rpm warn on that case, because its not something I want to encourage and could help catching other misuses.\n\nUsing empty string for a pattern is also unnecessary, assuming there's a case where a path/magic pattern is really not expressable outside a spec context, its better to leave the macros entirely undefined in the .attr file and have spec/helper macros define them as needed to make the spec context requirement more explicit.\n\n--- Additional comment from Vít Ondruch on 2014-10-20 15:44:58 CEST ---\n\n(In reply to Panu Matilainen from comment #16)\n> (In reply to Vít Ondruch from comment #15)\n> > (In reply to Panu Matilainen from comment #14)\n> > > Empty string *might* be harmless, but its also entirely non-sensical as a\n> > > path pattern, and confusing to a random bypasser looking at it.\n> > \n> > It seems that for me and Miroslav, the empty string is acceptable and\n> > understandable. So may be something you could (re)consider ... Actually, not\n> > sure how the matching is done internally, but I'm bit afraid that empty\n> > string might match everything, what would be even less expected.\n> \n> That's pretty much my point: an empty string as a path is ambiguous at best.\n> If anything I might consider making rpm warn on that case, because its not\n> something I want to encourage and could help catching other misuses.\n> \n> Using empty string for a pattern is also unnecessary, assuming there's a\n> case where a path/magic pattern is really not expressable outside a spec\n> context, its better to leave the macros entirely undefined in the .attr file\n> and have spec/helper macros define them as needed to make the spec context\n> requirement more explicit.\n\nThat make sense. So either note in documentation or warning or both would be nice. Thank you for patience with me ;)"
							},
							{
								"isprivate": "0",
								"commentid": "8130714",
								"comment_count": "1",
								"who": {
									"text": "ffesti",
									"name": "Florian Festi"
								},
								"bug_when": "2015-04-10 12:20:46 +0000",
								"thetext": "Updated http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n\nFeel free to reopen if you have questions or bug us on #rpm.org @freenode or the rpm mailinglist."
							}
						]
					}
				],
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "7586454",
						"comment_count": "0",
						"who": {
							"text": "msuchy",
							"name": "Miroslav Suchý"
						},
						"bug_when": "2014-10-17 12:37:21 +0000",
						"thetext": "Description of problem:\nRecently I started to see in rpmbuild output line:\n\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nwhere 0.5.0 is version of package, which is building right now.\nIt is likely some manipulation of this macro:\n$ rpm --showrc |grep specificat\n-14: gem_spec   %{gem_dir}/specifications/%{gem_name}-%{version}.gemspec\nin some hook, but I do not see any such localy defined in /etc/rpm or /usr/lib/rpm/macros.d\n\nVersion-Release number of selected component (if applicable):\nrpm-build-4.12.0.1-2.fc21.x86_64\n\nHow reproducible:\nalways\n\nSteps to Reproduce:\n1. rpmbuild --rebuild /tmp/tito/tracer-0.5.0-1.git.9.a24255c.fc21.src.rpm  (happen to me with every package)\n\nActual results:\n...\nExecuting(%doc): /bin/sh -e /var/tmp/rpm-tmp.wtY87E\n+ umask 022\n+ cd /home/msuchy/rpmbuild/BUILD\n+ cd tracer-git-9.a24255c\n+ DOCDIR=/home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ export DOCDIR\n+ /usr/bin/mkdir -p /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ cp -pr LICENSE /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ cp -pr README.md /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64/usr/share/doc/tracer\n+ exit 0\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\nProvides: tracer = 0.5.0-1.git.9.a24255c.fc21\nRequires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PartialHardlinkSets) <= 4.0.4-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1\nRequires: /usr/bin/python python(abi) = 2.7\nProcessing files: dnf-tracer-plugin-0.5.0-1.git.9.a24255c.fc21.noarch\nwarning: Ignoring invalid regex ^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\nProvides: dnf-tracer-plugin = 0.5.0-1.git.9.a24255c.fc21\nRequires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PartialHardlinkSets) <= 4.0.4-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1\nRequires: python(abi) = 2.7\nChecking for unpackaged file(s): /usr/lib/rpm/check-files /home/msuchy/rpmbuild/BUILDROOT/tracer-0.5.0-1.git.9.a24255c.fc21.x86_64\nWrote: /home/msuchy/rpmbuild/RPMS/noarch/tracer-0.5.0-1.git.9.a24255c.fc21.noarch.rpm\nWrote: /home/msuchy/rpmbuild/RPMS/noarch/dnf-tracer-plugin-0.5.0-1.git.9.a24255c.fc21.noarch.rpm\nExecuting(%clean): /bin/sh -e /var/tmp/rpm-tmp.yJNpQk\n+ umask 022\n....\n\nExpected results:\nno warning about gemspec especially if this is not ruby package."
					},
					{
						"isprivate": "0",
						"commentid": "7586730",
						"comment_count": "1",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-17 12:46:27 +0000",
						"thetext": "Rpm doesn't know the damnest thing about gems and certainly does not define such macros. Rubygems should be closer to the mark."
					},
					{
						"isprivate": "0",
						"commentid": "7586808",
						"comment_count": "2",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-17 13:13:45 +0000",
						"thetext": "I have not tried it, but I guess that it might be issue for every package build (except rubygem- packages) in case that rubygems-devel is installed. This is the line which causes the issue:\n\nhttp://pkgs.fedoraproject.org/cgit/ruby.git/tree/rubygems.attr#n3\n\nSince the %{gem_name} is not defined for non rubygem- packages, the ^%{gem_spec}$ evaluates to:\n\n^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nNow the question is, how to workaround this. Is this something what can be fixed in Ruby?"
					},
					{
						"isprivate": "0",
						"commentid": "7586943",
						"comment_count": "3",
						"who": {
							"text": "msuchy",
							"name": "Miroslav Suchý"
						},
						"bug_when": "2014-10-17 13:56:05 +0000",
						"thetext": "This:\n  %__rubygems_path        %{?gem_name:^%{gem_spec}$}\nshould the work."
					},
					{
						"isprivate": "0",
						"commentid": "7586982",
						"comment_count": "4",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-17 14:07:02 +0000",
						"thetext": "Silly me :) Thanks."
					},
					{
						"isprivate": "0",
						"commentid": "7590259",
						"comment_count": "5",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 06:38:37 +0000",
						"thetext": "That will shut up the warning but it'll define %__rubygems_path to an empty string. While that doesn't seem to cause anything bad in the classifier... is there a reason that couldn't be something that matches .gemspec's regardless of %gem_name being defined or not, eg something like this?\n\n^/usr/share/gems/specifications/.*-0.5.0.gemspec$"
					},
					{
						"isprivate": "0",
						"commentid": "7590427",
						"comment_count": "6",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 07:40:32 +0000",
						"thetext": "That would match any possible .gemspec of the 0.5.0 version on the system, that is definitely not something we would like. Although it could be probably handled with some magic in the generator.\n\nOr we could expand it into some nonexisting path, to avoid the check entirely if that makes RPM happier.\n\nBut isn't there better way how to tell RPM that for this case, we want to disable this generator? Ruby's generator can't be the only one which suffers this issue. Actually this was the idea when I filled the original NEEDINFO."
					},
					{
						"isprivate": "0",
						"commentid": "7590450",
						"comment_count": "7",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 07:48:17 +0000",
						"thetext": "Um, those paths are only matched within the buildroot, you can't match anything from the system. So there's little point trying to mess with disabling/enabling these things."
					},
					{
						"isprivate": "0",
						"commentid": "7590583",
						"comment_count": "8",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 08:25:43 +0000",
						"thetext": "Ok, so explicit \"enabling/disabling\" is no-go. What is better then:\n\n1) Empty string\n2) Matching nonexisting path\n\nFrom my POV the former sound right. RPM could ensure that if the %__rubygems_path is empty, the generator will be effectively disabled and no matching is done at all."
					},
					{
						"isprivate": "0",
						"commentid": "7590621",
						"comment_count": "9",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 08:34:56 +0000",
						"thetext": "Stop for a minute please. I'm getting this feeling you're thinking/doing something \"backwards\" here and thats the reason it feels awkward and harder that it should be.\n\nWhy do you think you need to do something special disable magic with it? When there is a .gemspec in a built package, shouldn't it always match? If not, why?"
					},
					{
						"isprivate": "0",
						"commentid": "7590745",
						"comment_count": "10",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 09:08:42 +0000",
						"thetext": "Ok, so I'll try once more.\n\nIf you have rubygems-devel installed on your system, there is line [1]:\n\n%__rubygems_path\t^%{gem_spec}$\n\nThe %{gem_spec} macro [2] is defined as:\n\n%gem_spec %{gem_dir}/specifications/%{gem_name}-%{version}.gemspec\n\nWhere %{gem_dir} is static [3], %{version} is always defined in .spec and the %{gem_name} is expected to be defined in the .spec. However, while the %{gem_name} is defined for every rubygem- package, it not defined in any other package. So for non-rubygem package (in Miroslav's case), the %__rubygems_path expands to\n\n%__rubygems_path\t^/usr/share/gems/specifications/%{gem_name}-0.5.0.gemspec$\n\nwhich is invalid regexp. Miroslav proposed to check for existence of %{gem_name} and if it does not exist, expand the %__rubygems_path to empty string. I like this proposal and can't see any problems with it.\n\nOn the other hand, you expect to be problematic for some unknown reason and suggest to expand it into some different path, which probably does not exist in buildroot, but it might exist.\n\nSo why it should not be empty string? What is the issue with the empty string?\n\n\n[1] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/rubygems.attr#n3\n[2] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/macros.rubygems#n10\n[3] http://pkgs.fedoraproject.org/cgit/ruby.git/tree/macros.rubygems#n2"
					},
					{
						"isprivate": "0",
						"commentid": "7590787",
						"comment_count": "11",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 09:16:19 +0000",
						"thetext": "I'll answer your question(s) once you answer mine:\n\nWhy aren't you just using a wildcard for the .gemspec files (like everyone else does)?\n\nThat is how these rules are expected to be written, and that way you'll also get correct results from the external dependency generator mode which does not have access to spec internals like %{name} and %{version}. Which means its easier to test & debug the generator too because you can run it outside rpmbuild and get identical results."
					},
					{
						"isprivate": "0",
						"commentid": "7590857",
						"comment_count": "12",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 09:40:03 +0000",
						"thetext": "...or to put it in another way:\n\nYou're using the system against its design, so its fighting back. The file attributes are for matching *classes* of files, not a specific given file. If you think about it, the individual file approach does not exactly scale :)\nFor example the way its done now prevents packaging multiple rubygem subpackages from a single spec. Whether that matters or not for Fedora's Ruby packages I dont know."
					},
					{
						"isprivate": "0",
						"commentid": "7591195",
						"comment_count": "13",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 11:40:09 +0000",
						"thetext": "Ah, now I finally got the comment #5. Actually I tried to be as specific as possible. That is the reason why there is the %{gem_name}.\n\n> For example the way its done now prevents packaging multiple rubygem\n> subpackages from a single spec. Whether that matters or not for Fedora's\n> Ruby packages I dont know.\n\nYou are right. On the other hand, if I for some reason install two gems into buildroot (may be planning to create two subpackages?) or I want to package just one at the end, I'll have the opposite problem, e.g. the dependencies will be generated from multiple .gemspecs instead the one I care. Not that I have any real life example at my hand, so this artificial point ...\n\nSo I'll go with the wildcard for the moment. However, I'd love to know why not empty string and I would appreciate, if the dependency generator documentation [1] could be extended to contain some paragraph about the empty string, wildcard and file *classes* you talk about in comment #11 and comment #12\n\n\n[1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator"
					},
					{
						"isprivate": "0",
						"commentid": "7591336",
						"comment_count": "14",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 12:11:53 +0000",
						"thetext": "(In reply to Vít Ondruch from comment #13)\n> Ah, now I finally got the comment #5. Actually I tried to be as specific as\n> possible. That is the reason why there is the %{gem_name}.\n> \n> > For example the way its done now prevents packaging multiple rubygem\n> > subpackages from a single spec. Whether that matters or not for Fedora's\n> > Ruby packages I dont know.\n> \n> You are right. On the other hand, if I for some reason install two gems into\n> buildroot (may be planning to create two subpackages?) or I want to package\n> just one at the end, I'll have the opposite problem, e.g. the dependencies\n> will be generated from multiple .gemspecs instead the one I care. Not that I\n> have any real life example at my hand, so this artificial point ...\n\nDependencies are generated only for packaged files, and attached to the (sub)package a given file belongs to. So you're worrying over non-issues and in doing so, making life unnecessarily hard for yourself :)\n\n> \n> So I'll go with the wildcard for the moment. However, I'd love to know why\n> not empty string \n\nEmpty string *might* be harmless, but its also entirely non-sensical as a path pattern, and confusing to a random bypasser looking at it.\n\nYou dont want to resort to workarounds when a correct solution exists, that is why I wanted to hear the reasons behind this setup. \n\n> and I would appreciate, if the dependency generator\n> documentation [1] could be extended to contain some paragraph about the\n> empty string, wildcard and file *classes* you talk about in comment #11 and\n> comment #12\n> \n> [1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n\nNod, in the light of this discussion its clear that document is severely lacking in the description of the bigger picture (some might say design)."
					},
					{
						"isprivate": "0",
						"commentid": "7591577",
						"comment_count": "15",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 13:25:39 +0000",
						"thetext": "(In reply to Panu Matilainen from comment #14)\n> (In reply to Vít Ondruch from comment #13)\n> > Ah, now I finally got the comment #5. Actually I tried to be as specific as\n> > possible. That is the reason why there is the %{gem_name}.\n> > \n> > > For example the way its done now prevents packaging multiple rubygem\n> > > subpackages from a single spec. Whether that matters or not for Fedora's\n> > > Ruby packages I dont know.\n> > \n> > You are right. On the other hand, if I for some reason install two gems into\n> > buildroot (may be planning to create two subpackages?) or I want to package\n> > just one at the end, I'll have the opposite problem, e.g. the dependencies\n> > will be generated from multiple .gemspecs instead the one I care. Not that I\n> > have any real life example at my hand, so this artificial point ...\n> \n> Dependencies are generated only for packaged files, and attached to the\n> (sub)package a given file belongs to. So you're worrying over non-issues and\n> in doing so, making life unnecessarily hard for yourself :)\n\nThanks for clarification.\n\n> > So I'll go with the wildcard for the moment. However, I'd love to know why\n> > not empty string \n> \n> Empty string *might* be harmless, but its also entirely non-sensical as a\n> path pattern, and confusing to a random bypasser looking at it.\n\nIt seems that for me and Miroslav, the empty string is acceptable and understandable. So may be something you could (re)consider ... Actually, not sure how the matching is done internally, but I'm bit afraid that empty string might match everything, what would be even less expected.\n\n> You dont want to resort to workarounds when a correct solution exists, that\n> is why I wanted to hear the reasons behind this setup. \n> \n> > and I would appreciate, if the dependency generator\n> > documentation [1] could be extended to contain some paragraph about the\n> > empty string, wildcard and file *classes* you talk about in comment #11 and\n> > comment #12\n> > \n> > [1] http://rpm.org/wiki/PackagerDocs/DependencyGenerator\n> \n> Nod, in the light of this discussion its clear that document is severely\n> lacking in the description of the bigger picture (some might say design).\n\nThanks!"
					},
					{
						"isprivate": "0",
						"commentid": "7591663",
						"comment_count": "16",
						"who": {
							"text": "pmatilai",
							"name": "Panu Matilainen"
						},
						"bug_when": "2014-10-20 13:39:46 +0000",
						"thetext": "(In reply to Vít Ondruch from comment #15)\n> (In reply to Panu Matilainen from comment #14)\n> > Empty string *might* be harmless, but its also entirely non-sensical as a\n> > path pattern, and confusing to a random bypasser looking at it.\n> \n> It seems that for me and Miroslav, the empty string is acceptable and\n> understandable. So may be something you could (re)consider ... Actually, not\n> sure how the matching is done internally, but I'm bit afraid that empty\n> string might match everything, what would be even less expected.\n\nThat's pretty much my point: an empty string as a path is ambiguous at best.\nIf anything I might consider making rpm warn on that case, because its not something I want to encourage and could help catching other misuses.\n\nUsing empty string for a pattern is also unnecessary, assuming there's a case where a path/magic pattern is really not expressable outside a spec context, its better to leave the macros entirely undefined in the .attr file and have spec/helper macros define them as needed to make the spec context requirement more explicit."
					},
					{
						"isprivate": "0",
						"commentid": "7591685",
						"comment_count": "17",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2014-10-20 13:44:58 +0000",
						"thetext": "(In reply to Panu Matilainen from comment #16)\n> (In reply to Vít Ondruch from comment #15)\n> > (In reply to Panu Matilainen from comment #14)\n> > > Empty string *might* be harmless, but its also entirely non-sensical as a\n> > > path pattern, and confusing to a random bypasser looking at it.\n> > \n> > It seems that for me and Miroslav, the empty string is acceptable and\n> > understandable. So may be something you could (re)consider ... Actually, not\n> > sure how the matching is done internally, but I'm bit afraid that empty\n> > string might match everything, what would be even less expected.\n> \n> That's pretty much my point: an empty string as a path is ambiguous at best.\n> If anything I might consider making rpm warn on that case, because its not\n> something I want to encourage and could help catching other misuses.\n> \n> Using empty string for a pattern is also unnecessary, assuming there's a\n> case where a path/magic pattern is really not expressable outside a spec\n> context, its better to leave the macros entirely undefined in the .attr file\n> and have spec/helper macros define them as needed to make the spec context\n> requirement more explicit.\n\nThat make sense. So either note in documentation or warning or both would be nice. Thank you for patience with me ;)"
					},
					{
						"isprivate": "0",
						"commentid": "7915287",
						"comment_count": "18",
						"who": {
							"text": "orion",
							"name": "Orion Poplawski"
						},
						"bug_when": "2015-02-06 18:25:08 +0000",
						"thetext": "Any progress here?"
					},
					{
						"isprivate": "0",
						"commentid": "7941058",
						"comment_count": "19",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2015-02-16 11:49:15 +0000",
						"thetext": "(In reply to Orion Poplawski from comment #18)\n> Any progress here?\n\nThis should be already fixed."
					},
					{
						"isprivate": "0",
						"commentid": "7943205",
						"comment_count": "20",
						"who": {
							"text": "dcallagh",
							"name": "Dan Callaghan"
						},
						"bug_when": "2015-02-16 22:45:15 +0000",
						"thetext": "(In reply to Vít Ondruch from comment #19)\n> This should be already fixed.\n\nI don't think it is... The offending macro is in /usr/lib/rpm/fileattrs/rubygems.attr which comes from rubygems-devel, not ruby. I have rubygems-devel-2.2.2-101.fc21 (latest) and I am still seeing the warning in rpmbuild output."
					},
					{
						"isprivate": "0",
						"commentid": "7944019",
						"comment_count": "21",
						"who": {
							"text": "vondruch",
							"name": "Vít Ondruch"
						},
						"bug_when": "2015-02-17 08:06:24 +0000",
						"thetext": "(In reply to Dan Callaghan from comment #20)\nSorry, you are right of course -> reopenning"
					},
					{
						"isprivate": "0",
						"commentid": "8538145",
						"comment_count": "22",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-13 06:25:50 +0000",
						"thetext": "rubygems-2.2.5-100.fc21 has been submitted as an update for Fedora 21.\nhttps://admin.fedoraproject.org/updates/FEDORA-2015-13157/rubygems-2.2.5-100.fc21"
					},
					{
						"isprivate": "0",
						"commentid": "8554725",
						"comment_count": "23",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-19 08:17:03 +0000",
						"thetext": "rubygems-2.2.5-100.fc21 has been pushed to the Fedora 21 stable repository.  If problems still persist, please make note of it in this bug report."
					}
				]
			}
		},
		{
			"bug_id": 1236116,
			"parent": true,
			"security": true,
			"title": "CVE-2015-3900 rubygems: DNS hijacking vulnerability in api_endpoint()",
			"bugzilla": {
				"bug_id": "1236116",
				"alias": "CVE-2015-3900",
				"creation_ts": "2015-06-26 15:03:50 +0000",
				"short_desc": "CVE-2015-3900 rubygems: DNS hijacking vulnerability in api_endpoint()",
				"delta_ts": "2021-02-17 05:10:57 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Security",
				"priority": "high",
				"bug_severity": "high",
				"depends_on": [
					"1236117",
					"1251465",
					"1251466"
				],
				"blocked": [
					{
						"bug_id": "1237100",
						"error": "NotPermitted"
					}
				],
				"external_bugs": {
					"text": "RHSA-2015:1657",
					"name": "Red Hat Product Errata"
				},
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "8375376",
						"comment_count": "0",
						"who": {
							"text": "vkaigoro",
							"name": "Vasyl Kaigorodov"
						},
						"bug_when": "2015-06-26 15:03:50 +0000",
						"thetext": "RubyGems before versions 2.0.16, 2.2.4 and 2.4.7 did not verify the API endpoint hostname retrieved through an SRV record.\nThis left clients open to a DNS hijack attack, whereby an attacker could return a SRV of their choosing and get the client to use it.\n\nUpstream patch: https://github.com/rubygems/rubygems/commit/6bbee35\n\nExternal References:\n\nhttp://blog.rubygems.org/2015/05/14/CVE-2015-3900.html\n\nStatement:\n\nThis issue did not affect the versions of rubygems as shipped with Red Hat Enterprise Linux 6, Red Hat Enterprise MRG 2.5, Red Hat Satellite 6, Red Hat Openstack 5, Red Hat Openshift Enterprise 2 as they did not include support for getting API endpoint using SRV DNS records.\n\nThis issue did not affect the versions of ruby as shipped with Red Hat Enterprise Linux 5 and 6 as they did not include support for getting API endpoint using SRV DNS records. The issue did not affect version of ruby as shipped with Red Hat Enterprise Linux 7, as the support for getting API endpoint using SRV DNS records is included, but inactive.\n\nThis issue did not affect the versions of ruby193-ruby as shipped with Red Hat Subscription Asset Manager and Red Hat Software Collections as they did not include support for getting API endpoint using SRV DNS records.\n\nThe issue did not affect version of ruby200-ruby as shipped with Red Hat Software Collections, as the support for getting API endpoint using SRV DNS records is included, but inactive."
					},
					{
						"isprivate": "0",
						"commentid": "8375382",
						"comment_count": "1",
						"who": {
							"text": "vkaigoro",
							"name": "Vasyl Kaigorodov"
						},
						"bug_when": "2015-06-26 15:05:16 +0000",
						"thetext": "\nCreated rubygems tracking bugs for this issue:\n\nAffects: fedora-all [bug 1236117]"
					},
					{
						"isprivate": "0",
						"commentid": "8375647",
						"comment_count": "2",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2015-06-26 16:26:01 +0000",
						"thetext": "(In reply to Vasyl Kaigorodov from comment #0)\n> Upstream patch: https://github.com/rubygems/rubygems/commit/6bbee35\n\nThat patch is incorrect / incomplete, as noted in comments for it.  This additional commit improves the original fix:\n\nhttps://github.com/rubygems/rubygems/commit/5c7bfb5"
					},
					{
						"isprivate": "0",
						"commentid": "8393199",
						"comment_count": "3",
						"who": {
							"text": "vkaigoro",
							"name": "Vasyl Kaigorodov"
						},
						"bug_when": "2015-06-30 15:14:30 +0000",
						"thetext": "So, for sake of sanity.\nOriginal upstream patch got CVE-2015-3900 assigned:\nhttps://github.com/rubygems/rubygems/commit/6bbee35\n\nLater it was found that the original patch introduces another vulnerability, which got CVE-2015-4020:\nhttps://github.com/rubygems/rubygems/commit/5c7bfb5"
					},
					{
						"isprivate": "0",
						"commentid": "8509722",
						"comment_count": "4",
						"who": {
							"text": "jrusnack",
							"name": "Ján Rusnačko"
						},
						"bug_when": "2015-08-04 15:07:53 +0000",
						"thetext": "Analysis (from http://blog.rubygems.org/2015/05/14/CVE-2015-3900.html):\n\n\"\"\"\nRubyGems provides the ability of a domain to direct clients to a separate host that is used to fetch gems and make API calls against. This mechanism is implemented via DNS, specificly a SRV record _rubygems._tcp under the original requested domain.\n\n  > dig _rubygems._tcp.rubygems.org SRV\n\n  ;; ANSWER SECTION:\n  _rubygems._tcp.rubygems.org. 600 IN\tSRV\t0 1 80 api.rubygems.org.\n\nRubyGems did not validate the hostname returned in the SRV record before sending requests to it.\n\nThis left clients open to a DNS hijack attack, whereby an attacker could return a SRV of their choosing and get the client to use it. For example:  \n\n  > dig _rubygems._tcp.rubygems.org SRV\n\n  ;; ANSWER SECTION:\n  _rubygems._tcp.rubygems.org. 600 IN\tSRV\t0 1 80 gems.nottobetrusted.wtf\n\"\"\"\n\nFix for this issue verifies that the returned host is on the same domain as the requested domain. This fix included:\n\n    if /#{host}\\z/ =~ target\n\nwhich is incomplete, because suffix match is sufficient, e.g. if the domain requested was rubygems.org, attacker served record of attackersrubygems.org would pass this check (CVE-2015-4020). The complete fix for both now includes:\n\n    if /\\.#{Regexp.quote(host)}\\z/ =~ target\n\n\nRubygems code is also bundled into ruby. The vulnerable code (function api_endpoint in lib/rubygems/remote_fetcher.rb) is present in ruby-2.0 and above.\n\nThis code is invoked like this:\n\nlib/rubygems/resolver/best_set.rb BestSet#pick_sets() cals\nlib/rubygems/source.rb Source#dependency_resolver_set() calls \nlib/rubygems/source.rb Source#api_uri() calls \nlib/rubygems/remote_fetcher.rb RemoteFetcher#api_endpoint()\n\nHowever, code that invokes vulnerable function was not added to ruby before 2.1.0, hence versions of ruby below 2.1 are not affected by this vulnerability, as the vulnerable code is included but never called."
					},
					{
						"isprivate": "0",
						"commentid": "8515373",
						"comment_count": "5",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2015-08-05 20:37:22 +0000",
						"thetext": "The incomplete fix issue CVE-2015-4020 is tracked via bug 1250109.\n\nTrustwave SpiderLabs (original reporter) security advisory for this issue:\n\nhttps://www.trustwave.com/Resources/Security-Advisories/Advisories/TWSL2015-007/?fid=6356\n\nTrustwave SpiderLabs blog post for CVE-2015-3900 and CVE-2015-4020:\n\nhttps://www.trustwave.com/Resources/SpiderLabs-Blog/Attacking-Ruby-Gem-Security-with-CVE-2015-3900/"
					},
					{
						"isprivate": "0",
						"commentid": "8525583",
						"comment_count": "7",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-10 10:06:21 +0000",
						"thetext": "rubygems-2.4.8-100.fc23 has been pushed to the Fedora 23 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "8528136",
						"comment_count": "8",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-11 02:06:51 +0000",
						"thetext": "rubygems-2.4.8-100.fc22 has been pushed to the Fedora 22 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "8554726",
						"comment_count": "9",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-19 08:17:08 +0000",
						"thetext": "rubygems-2.2.5-100.fc21 has been pushed to the Fedora 21 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "8569255",
						"comment_count": "10",
						"who": {
							"text": "errata-xmlrpc",
							"name": "errata-xmlrpc"
						},
						"bug_when": "2015-08-24 14:16:51 +0000",
						"thetext": "This issue has been addressed in the following products:\n\n  Red Hat Software Collections for Red Hat Enterprise Linux 7.1 EUS\n  Red Hat Software Collections for Red Hat Enterprise Linux 7\n  Red Hat Software Collections for Red Hat Enterprise Linux 6.6 EUS\n  Red Hat Software Collections for Red Hat Enterprise Linux 6\n  Red Hat Software Collections for Red Hat Enterprise Linux 6.5 EUS\n\nVia RHSA-2015:1657 https://rhn.redhat.com/errata/RHSA-2015-1657.html"
					}
				]
			}
		},
		{
			"bug_id": 1236117,
			"security": true,
			"title": "CVE-2015-3900 rubygems: DNS hijacking vulnerability in api_endpoint() [fedora-all]",
			"bugzilla": {
				"bug_id": "1236117",
				"creation_ts": "2015-06-26 15:05:09 +0000",
				"short_desc": "CVE-2015-3900 rubygems: DNS hijacking vulnerability in api_endpoint() [fedora-all]",
				"delta_ts": "2015-08-19 08:17:01 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Security, SecurityTracking",
				"priority": "medium",
				"bug_severity": "medium",
				"blocked": [
					{
						"bug_id": "1236116",
						"alias": "CVE-2015-3900",
						"creation_ts": "2015-06-26 15:03:50 +0000",
						"short_desc": "CVE-2015-3900 rubygems: DNS hijacking vulnerability in api_endpoint()",
						"delta_ts": "2021-02-17 05:10:57 +0000",
						"bug_status": "CLOSED",
						"resolution": "ERRATA",
						"keywords": "Security",
						"priority": "high",
						"bug_severity": "high",
						"depends_on": [
							"1236117",
							"1251465",
							"1251466"
						],
						"blocked": [
							{
								"bug_id": "1237100",
								"error": "NotPermitted"
							}
						],
						"external_bugs": {
							"text": "RHSA-2015:1657",
							"name": "Red Hat Product Errata"
						},
						"long_desc": [
							{
								"isprivate": "0",
								"commentid": "8375376",
								"comment_count": "0",
								"who": {
									"text": "vkaigoro",
									"name": "Vasyl Kaigorodov"
								},
								"bug_when": "2015-06-26 15:03:50 +0000",
								"thetext": "RubyGems before versions 2.0.16, 2.2.4 and 2.4.7 did not verify the API endpoint hostname retrieved through an SRV record.\nThis left clients open to a DNS hijack attack, whereby an attacker could return a SRV of their choosing and get the client to use it.\n\nUpstream patch: https://github.com/rubygems/rubygems/commit/6bbee35\n\nExternal References:\n\nhttp://blog.rubygems.org/2015/05/14/CVE-2015-3900.html\n\nStatement:\n\nThis issue did not affect the versions of rubygems as shipped with Red Hat Enterprise Linux 6, Red Hat Enterprise MRG 2.5, Red Hat Satellite 6, Red Hat Openstack 5, Red Hat Openshift Enterprise 2 as they did not include support for getting API endpoint using SRV DNS records.\n\nThis issue did not affect the versions of ruby as shipped with Red Hat Enterprise Linux 5 and 6 as they did not include support for getting API endpoint using SRV DNS records. The issue did not affect version of ruby as shipped with Red Hat Enterprise Linux 7, as the support for getting API endpoint using SRV DNS records is included, but inactive.\n\nThis issue did not affect the versions of ruby193-ruby as shipped with Red Hat Subscription Asset Manager and Red Hat Software Collections as they did not include support for getting API endpoint using SRV DNS records.\n\nThe issue did not affect version of ruby200-ruby as shipped with Red Hat Software Collections, as the support for getting API endpoint using SRV DNS records is included, but inactive."
							},
							{
								"isprivate": "0",
								"commentid": "8375382",
								"comment_count": "1",
								"who": {
									"text": "vkaigoro",
									"name": "Vasyl Kaigorodov"
								},
								"bug_when": "2015-06-26 15:05:16 +0000",
								"thetext": "\nCreated rubygems tracking bugs for this issue:\n\nAffects: fedora-all [bug 1236117]"
							},
							{
								"isprivate": "0",
								"commentid": "8375647",
								"comment_count": "2",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2015-06-26 16:26:01 +0000",
								"thetext": "(In reply to Vasyl Kaigorodov from comment #0)\n> Upstream patch: https://github.com/rubygems/rubygems/commit/6bbee35\n\nThat patch is incorrect / incomplete, as noted in comments for it.  This additional commit improves the original fix:\n\nhttps://github.com/rubygems/rubygems/commit/5c7bfb5"
							},
							{
								"isprivate": "0",
								"commentid": "8393199",
								"comment_count": "3",
								"who": {
									"text": "vkaigoro",
									"name": "Vasyl Kaigorodov"
								},
								"bug_when": "2015-06-30 15:14:30 +0000",
								"thetext": "So, for sake of sanity.\nOriginal upstream patch got CVE-2015-3900 assigned:\nhttps://github.com/rubygems/rubygems/commit/6bbee35\n\nLater it was found that the original patch introduces another vulnerability, which got CVE-2015-4020:\nhttps://github.com/rubygems/rubygems/commit/5c7bfb5"
							},
							{
								"isprivate": "0",
								"commentid": "8509722",
								"comment_count": "4",
								"who": {
									"text": "jrusnack",
									"name": "Ján Rusnačko"
								},
								"bug_when": "2015-08-04 15:07:53 +0000",
								"thetext": "Analysis (from http://blog.rubygems.org/2015/05/14/CVE-2015-3900.html):\n\n\"\"\"\nRubyGems provides the ability of a domain to direct clients to a separate host that is used to fetch gems and make API calls against. This mechanism is implemented via DNS, specificly a SRV record _rubygems._tcp under the original requested domain.\n\n  > dig _rubygems._tcp.rubygems.org SRV\n\n  ;; ANSWER SECTION:\n  _rubygems._tcp.rubygems.org. 600 IN\tSRV\t0 1 80 api.rubygems.org.\n\nRubyGems did not validate the hostname returned in the SRV record before sending requests to it.\n\nThis left clients open to a DNS hijack attack, whereby an attacker could return a SRV of their choosing and get the client to use it. For example:  \n\n  > dig _rubygems._tcp.rubygems.org SRV\n\n  ;; ANSWER SECTION:\n  _rubygems._tcp.rubygems.org. 600 IN\tSRV\t0 1 80 gems.nottobetrusted.wtf\n\"\"\"\n\nFix for this issue verifies that the returned host is on the same domain as the requested domain. This fix included:\n\n    if /#{host}\\z/ =~ target\n\nwhich is incomplete, because suffix match is sufficient, e.g. if the domain requested was rubygems.org, attacker served record of attackersrubygems.org would pass this check (CVE-2015-4020). The complete fix for both now includes:\n\n    if /\\.#{Regexp.quote(host)}\\z/ =~ target\n\n\nRubygems code is also bundled into ruby. The vulnerable code (function api_endpoint in lib/rubygems/remote_fetcher.rb) is present in ruby-2.0 and above.\n\nThis code is invoked like this:\n\nlib/rubygems/resolver/best_set.rb BestSet#pick_sets() cals\nlib/rubygems/source.rb Source#dependency_resolver_set() calls \nlib/rubygems/source.rb Source#api_uri() calls \nlib/rubygems/remote_fetcher.rb RemoteFetcher#api_endpoint()\n\nHowever, code that invokes vulnerable function was not added to ruby before 2.1.0, hence versions of ruby below 2.1 are not affected by this vulnerability, as the vulnerable code is included but never called."
							},
							{
								"isprivate": "0",
								"commentid": "8515373",
								"comment_count": "5",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2015-08-05 20:37:22 +0000",
								"thetext": "The incomplete fix issue CVE-2015-4020 is tracked via bug 1250109.\n\nTrustwave SpiderLabs (original reporter) security advisory for this issue:\n\nhttps://www.trustwave.com/Resources/Security-Advisories/Advisories/TWSL2015-007/?fid=6356\n\nTrustwave SpiderLabs blog post for CVE-2015-3900 and CVE-2015-4020:\n\nhttps://www.trustwave.com/Resources/SpiderLabs-Blog/Attacking-Ruby-Gem-Security-with-CVE-2015-3900/"
							},
							{
								"isprivate": "0",
								"commentid": "8525583",
								"comment_count": "7",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2015-08-10 10:06:21 +0000",
								"thetext": "rubygems-2.4.8-100.fc23 has been pushed to the Fedora 23 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "8528136",
								"comment_count": "8",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2015-08-11 02:06:51 +0000",
								"thetext": "rubygems-2.4.8-100.fc22 has been pushed to the Fedora 22 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "8554726",
								"comment_count": "9",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2015-08-19 08:17:08 +0000",
								"thetext": "rubygems-2.2.5-100.fc21 has been pushed to the Fedora 21 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "8569255",
								"comment_count": "10",
								"who": {
									"text": "errata-xmlrpc",
									"name": "errata-xmlrpc"
								},
								"bug_when": "2015-08-24 14:16:51 +0000",
								"thetext": "This issue has been addressed in the following products:\n\n  Red Hat Software Collections for Red Hat Enterprise Linux 7.1 EUS\n  Red Hat Software Collections for Red Hat Enterprise Linux 7\n  Red Hat Software Collections for Red Hat Enterprise Linux 6.6 EUS\n  Red Hat Software Collections for Red Hat Enterprise Linux 6\n  Red Hat Software Collections for Red Hat Enterprise Linux 6.5 EUS\n\nVia RHSA-2015:1657 https://rhn.redhat.com/errata/RHSA-2015-1657.html"
							}
						]
					}
				],
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "8375379",
						"comment_count": "0",
						"who": {
							"text": "vkaigoro",
							"name": "Vasyl Kaigorodov"
						},
						"bug_when": "2015-06-26 15:05:09 +0000",
						"thetext": "\nThis is an automatically created tracking bug!  It was created to ensure\nthat one or more security vulnerabilities are fixed in affected versions\nof Fedora.\n\nFor comments that are specific to the vulnerability please use bugs filed\nagainst the \"Security Response\" product referenced in the \"Blocks\" field.\n\nFor more information see:\nhttp://fedoraproject.org/wiki/Security/TrackingBugs\n\nWhen submitting as an update, use the fedpkg template provided in the next\ncomment(s).  This will include the bug IDs of this tracking bug as well as\nthe relevant top-level CVE bugs.\n\nPlease also mention the CVE IDs being fixed in the RPM changelog and the\nfedpkg commit message.\n\nNOTE: this issue affects multiple supported versions of Fedora. While only\none tracking bug has been filed, please correct all affected versions at\nthe same time.  If you need to fix the versions independent of each other,\nyou may clone this bug as appropriate.\n\n[bug automatically created by: add-tracking-bugs]"
					},
					{
						"isprivate": "0",
						"commentid": "8375381",
						"comment_count": "1",
						"who": {
							"text": "vkaigoro",
							"name": "Vasyl Kaigorodov"
						},
						"bug_when": "2015-06-26 15:05:15 +0000",
						"thetext": "\nUse the following template to for the 'fedpkg update' request to submit an\nupdate for this issue as it contains the top-level parent bug(s) as well as\nthis tracking bug.  This will ensure that all associated bugs get updated\nwhen new packages are pushed to stable.\n\n=====\n\n# bugfix, security, enhancement, newpackage (required)\ntype=security\n\n# testing, stable\nrequest=testing\n\n# Bug numbers: 1234,9876\nbugs=1236116,1236117\n\n# Description of your update\nnotes=Security fix for CVE-2015-3900\n\n# Enable request automation based on the stable/unstable karma thresholds\nautokarma=True\nstable_karma=3\nunstable_karma=-3\n\n# Automatically close bugs when this marked as stable\nclose_bugs=True\n\n# Suggest that users restart after update\nsuggest_reboot=False\n\n======\n\nAdditionally, you may opt to use the bodhi update submission link instead:\n\nhttps://admin.fedoraproject.org/updates/new/?type_=security&bugs=1236116,1236117"
					},
					{
						"isprivate": "0",
						"commentid": "8499259",
						"comment_count": "2",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-07-31 08:26:48 +0000",
						"thetext": "rubygems-2.4.8-100.fc23 has been submitted as an update for Fedora 23.\nhttps://admin.fedoraproject.org/updates/rubygems-2.4.8-100.fc23"
					},
					{
						"isprivate": "0",
						"commentid": "8500280",
						"comment_count": "3",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-07-31 13:35:52 +0000",
						"thetext": "rubygems-2.4.8-100.fc22 has been submitted as an update for Fedora 22.\nhttps://admin.fedoraproject.org/updates/rubygems-2.4.8-100.fc22"
					},
					{
						"isprivate": "0",
						"commentid": "8500839",
						"comment_count": "4",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-07-31 16:48:54 +0000",
						"thetext": "Package rubygems-2.4.8-100.fc23:\n* should fix your issue,\n* was pushed to the Fedora 23 testing repository,\n* should be available at your local mirror within two days.\nUpdate it with:\n# su -c 'yum update --enablerepo=updates-testing rubygems-2.4.8-100.fc23'\nas soon as you are able to.\nPlease go to the following url:\nhttps://admin.fedoraproject.org/updates/FEDORA-2015-12501/rubygems-2.4.8-100.fc23\nthen log in and leave karma (feedback)."
					},
					{
						"isprivate": "0",
						"commentid": "8525247",
						"comment_count": "5",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-10 08:47:51 +0000",
						"thetext": "rubygems-2.2.5-100.fc21 has been submitted as an update for Fedora 21.\nhttps://admin.fedoraproject.org/updates/rubygems-2.2.5-100.fc21"
					},
					{
						"isprivate": "0",
						"commentid": "8525581",
						"comment_count": "6",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-10 10:06:11 +0000",
						"thetext": "rubygems-2.4.8-100.fc23 has been pushed to the Fedora 23 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "8528135",
						"comment_count": "7",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-11 02:06:49 +0000",
						"thetext": "rubygems-2.4.8-100.fc22 has been pushed to the Fedora 22 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "8554724",
						"comment_count": "8",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2015-08-19 08:17:01 +0000",
						"thetext": "rubygems-2.2.5-100.fc21 has been pushed to the Fedora 21 stable repository.  If problems still persist, please make note of it in this bug report."
					}
				]
			}
		}
	],
	"builds": [
		{
			"nvr": "rubygems-2.2.5-100.fc21",
			"signed": true,
			"type": "rpm",
			"package": {
				"noarch": [
					{
						"name": "rubygems-devel",
						"version": "2.2.5",
						"release": "100.fc21",
						"arch": "noarch"
					},
					{
						"name": "rubygems",
						"version": "2.2.5",
						"release": "100.fc21",
						"arch": "noarch"
					},
					{
						"name": "rubygems-doc",
						"version": "2.2.5",
						"release": "100.fc21",
						"arch": "noarch"
					}
				],
				"src": [
					{
						"name": "rubygems",
						"version": "2.2.5",
						"release": "100.fc21",
						"arch": "src"
					}
				]
			}
		}
	],
	"close_bugs": true,
	"comments": [
		{
			"id": 57572,
			"text": "This update has been submitted for testing by vondruch. ",
			"timestamp": "2015-08-10 08:47:55",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57573,
			"text": "Taskotron: depcheck test PASSED on i386. Result log:\nhttps://taskotron.fedoraproject.org/taskmaster//builders/x86_64/builds/115050/steps/runtask/logs/stdio\n(results are informative only)",
			"timestamp": "2015-08-10 09:01:35",
			"update_id": 8152,
			"user": {
				"avatar": "https://seccdn.libravatar.org/avatar/1c99e8328b68b58a71f5a9d6449baa7cb914591c56cbec0adfac7c50e4abefa4?s=24&d=retro",
				"email": "taskotron@fedoraproject.org",
				"groups": [
					{}
				],
				"id": 100,
				"name": "taskotron",
				"openid": "taskotron.id.fedoraproject.org"
			},
			"user_id": 100
		},
		{
			"id": 57574,
			"text": "Taskotron: depcheck test PASSED on x86_64. Result log:\nhttps://taskotron.fedoraproject.org/taskmaster//builders/x86_64/builds/115050/steps/runtask/logs/stdio\n(results are informative only)",
			"timestamp": "2015-08-10 09:01:52",
			"update_id": 8152,
			"user": {
				"avatar": "https://seccdn.libravatar.org/avatar/1c99e8328b68b58a71f5a9d6449baa7cb914591c56cbec0adfac7c50e4abefa4?s=24&d=retro",
				"email": "taskotron@fedoraproject.org",
				"groups": [
					{}
				],
				"id": 100,
				"name": "taskotron",
				"openid": "taskotron.id.fedoraproject.org"
			},
			"user_id": 100
		},
		{
			"id": 57575,
			"text": "This update is currently being pushed to the Fedora 21 testing updates repository.",
			"timestamp": "2015-08-10 15:44:15",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57576,
			"text": "This update has been pushed to testing",
			"timestamp": "2015-08-11 02:10:04",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57577,
			"text": "This update has reached 7 days in testing and can be pushed to stable now if the maintainer wishes",
			"timestamp": "2015-08-18 06:56:11",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57578,
			"text": "This update has been submitted for stable by vondruch. ",
			"timestamp": "2015-08-18 07:02:32",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57579,
			"text": "Taskotron: upgradepath test PASSED on noarch. Result log:\nhttps://taskotron.fedoraproject.org/taskmaster//builders/x86_64/builds/117643/steps/runtask/logs/stdio\n(results are informative only)",
			"timestamp": "2015-08-18 07:16:07",
			"update_id": 8152,
			"user": {
				"avatar": "https://seccdn.libravatar.org/avatar/1c99e8328b68b58a71f5a9d6449baa7cb914591c56cbec0adfac7c50e4abefa4?s=24&d=retro",
				"email": "taskotron@fedoraproject.org",
				"groups": [
					{}
				],
				"id": 100,
				"name": "taskotron",
				"openid": "taskotron.id.fedoraproject.org"
			},
			"user_id": 100
		},
		{
			"id": 57580,
			"text": "Taskotron: depcheck test PASSED on i386. Result log:\nhttps://taskotron.fedoraproject.org/taskmaster//builders/x86_64/builds/117644/steps/runtask/logs/stdio\n(results are informative only)",
			"timestamp": "2015-08-18 07:17:38",
			"update_id": 8152,
			"user": {
				"avatar": "https://seccdn.libravatar.org/avatar/1c99e8328b68b58a71f5a9d6449baa7cb914591c56cbec0adfac7c50e4abefa4?s=24&d=retro",
				"email": "taskotron@fedoraproject.org",
				"groups": [
					{}
				],
				"id": 100,
				"name": "taskotron",
				"openid": "taskotron.id.fedoraproject.org"
			},
			"user_id": 100
		},
		{
			"id": 57581,
			"text": "Taskotron: depcheck test PASSED on x86_64. Result log:\nhttps://taskotron.fedoraproject.org/taskmaster//builders/x86_64/builds/117644/steps/runtask/logs/stdio\n(results are informative only)",
			"timestamp": "2015-08-18 07:18:05",
			"update_id": 8152,
			"user": {
				"avatar": "https://seccdn.libravatar.org/avatar/1c99e8328b68b58a71f5a9d6449baa7cb914591c56cbec0adfac7c50e4abefa4?s=24&d=retro",
				"email": "taskotron@fedoraproject.org",
				"groups": [
					{}
				],
				"id": 100,
				"name": "taskotron",
				"openid": "taskotron.id.fedoraproject.org"
			},
			"user_id": 100
		},
		{
			"id": 57582,
			"text": "This update is currently being pushed to the Fedora 21 stable updates repository.",
			"timestamp": "2015-08-18 18:44:32",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 57583,
			"text": "This update has been pushed to stable",
			"timestamp": "2015-08-19 08:17:11",
			"update_id": 8152,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		}
	],
	"content_type": "rpm",
	"date_modified": "2015-08-13 06:25:44",
	"date_pushed": "2015-08-19 08:17:11",
	"date_stable": "2015-08-19 08:17:11",
	"date_submitted": "2015-08-10 08:47:48",
	"date_testing": "2015-08-11 02:10:04",
	"meets_testing_requirements": true,
	"notes": "Update to RubyGems 2.2.5.",
	"pushed": true,
	"release": {
		"branch": "f21",
		"candidate_tag": "f21-updates-candidate",
		"composed_by_bodhi": true,
		"dist_tag": "f21",
		"id_prefix": "FEDORA",
		"long_name": "Fedora 21",
		"mail_template": "fedora_errata_template",
		"name": "F21",
		"override_tag": "f21-override",
		"package_manager": "dnf",
		"pending_stable_tag": "f21-updates-pending",
		"pending_testing_tag": "f21-updates-testing-pending",
		"stable_tag": "f21-updates",
		"state": "archived",
		"testing_repository": "updates-testing",
		"testing_tag": "f21-updates-testing",
		"version": "21"
	},
	"severity": "unspecified",
	"stable_karma": 3,
	"status": "stable",
	"suggest": "unspecified",
	"title": "rubygems-2.2.5-100.fc21",
	"type": "security",
	"url": "https://bodhi.fedoraproject.org/updates/FEDORA-2015-13157",
	"unstable_karma": -3,
	"updateid": "FEDORA-2015-13157",
	"user": {
		"avatar": "https://seccdn.libravatar.org/avatar/18381818f23e9eba9b69d26321df755c42794053eee46cc578f0a12bac653309?s=24&d=retro",
		"email": "vondruch@redhat.com",
		"groups": [
			{
				"name": "packager"
			},
			{
				"name": "provenpackager"
			},
			{
				"name": "ipausers"
			},
			{
				"name": "fedora-contributor"
			},
			{
				"name": "signed_fpca"
			},
			{
				"name": "fedorabugs"
			},
			{
				"name": "cla_redhat"
			},
			{
				"name": "ruby-sig"
			},
			{
				"name": "rubygems-build"
			},
			{
				"name": "ruby-packagers-sig"
			},
			{
				"name": "trust admins"
			}
		],
		"id": 347,
		"name": "vondruch",
		"openid": "vondruch.id.fedoraproject.org"
	},
	"version_hash": "55d0dea9b54bb052c34244744b7de49a4709d15a"
}
