{
	"alias": "FEDORA-EPEL-2014-2308",
	"bugs": [
		{
			"bug_id": 810013,
			"parent": true,
			"security": true,
			"title": "CVE-2012-2146 python-elixir: weak use of crypto can leak information",
			"bugzilla": {
				"bug_id": "810013",
				"alias": "CVE-2012-2146",
				"creation_ts": "2012-04-04 22:10:58 +0000",
				"short_desc": "CVE-2012-2146 python-elixir: weak use of crypto can leak information",
				"delta_ts": "2019-09-29 12:51:39 +0000",
				"bug_status": "CLOSED",
				"resolution": "WONTFIX",
				"keywords": "Security",
				"priority": "medium",
				"bug_severity": "medium",
				"depends_on": [
					"923220",
					"923221"
				],
				"blocked": [
					{
						"bug_id": "817150",
						"error": "NotPermitted"
					}
				],
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "4574280",
						"comment_count": "0",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2012-04-04 22:10:58 +0000",
						"thetext": "It was reported that python-elixir, a library for ORM mapping on top of SQLAlchemy with support for encrypting data stored in a database, suffers from weak use of cryptography.  It uses Blowfish in CFB mode, which has an additional parameter (IV), which is not specified and thus defaults to zero.  CFB mode is only secure if the the IV is unpredictable and different for every message.  Because of this, and because the encryption key is shared for each database table (fields and rows), the same plaintext prefix is always encrypted to an identical and corresponding ciphertext prefix.  As a result, an attacker with access to the database could figure out the plaintext values of encrypted text."
					},
					{
						"isprivate": "0",
						"commentid": "4598753",
						"comment_count": "20",
						"who": {
							"text": "sochotni",
							"name": "Stanislav Ochotnicky"
						},
						"bug_when": "2012-04-17 09:25:13 +0000",
						"thetext": "Created attachment 577963\nmigration script tests\n\nI have created a simple set of scripts to test if data migration would be feasible. It seems that with modifications, data could be migrated like this:\n 1. prepare migration script, backup database etc\n 2. stop all database work\n 3. run migration script\n 4. install errata for this bug\n 5. continue working as before\n\nI am using monkey-patching to \"fix\" old python-elixir encryption code without actually touching the source files so we can sort of use fixed code without installing the errata.\n\nMigration script would have to use the encryption method expected. In this case I've used the first variant, i.e. keep using python-crypto. We could make the migration script a bit more generic where administrators doing the migration would just have to put in table names that contain encrypted data. I was also thinking about a way to prevent accidental running of the script twice, which would cause the data to be encrypted twice and didn't come up with anything short of creating additional table in the database that would contain already converted table names. Not a hard thing to do actually, but not sure it's worth doing."
					},
					{
						"isprivate": "0",
						"commentid": "4598794",
						"comment_count": "21",
						"who": {
							"text": "tmraz",
							"name": "Tomas Mraz"
						},
						"bug_when": "2012-04-17 09:39:55 +0000",
						"thetext": "If it is necessary to migrate, it should be definitely migrated to AES-128 cipher and m2crypto."
					},
					{
						"isprivate": "0",
						"commentid": "4603171",
						"comment_count": "24",
						"who": {
							"text": "sochotni",
							"name": "Stanislav Ochotnicky"
						},
						"bug_when": "2012-04-18 15:11:53 +0000",
						"thetext": "Created attachment 578385\nProposed patch to fix the bug\n\nAfter talking to mitr, I've contacted upstream[1]. \n\nI have a patch that adds additional encryption methods (turned off by default so that we don't break stuff when users install errata without migrating first). It uses AES/python-crypto to encrypt so we don't have to do major rewrites. Attached patch is a complete proposed change to python-elixir package.\n\nI've also updated example migration scripts to reflect this change\n\n\n[1] http://groups.google.com/group/sqlelixir/browse_thread/thread/efc16227514cffa"
					},
					{
						"isprivate": "0",
						"commentid": "4635034",
						"comment_count": "28",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2012-04-27 20:34:34 +0000",
						"thetext": "This has also been reported upstream, although currently there are no comments:\n\nhttp://elixir.ematia.de/trac/ticket/119\n\n(and no response to the message that Stanislav notes in comment #24"
					},
					{
						"isprivate": "0",
						"commentid": "4635086",
						"comment_count": "29",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2012-04-27 20:57:40 +0000",
						"thetext": "CVE and peer review requested:\n\nhttp://www.openwall.com/lists/oss-security/2012/04/27/8"
					},
					{
						"isprivate": "0",
						"commentid": "4636195",
						"comment_count": "31",
						"who": {
							"text": "kseifried",
							"name": "Kurt Seifried"
						},
						"bug_when": "2012-04-29 06:49:52 +0000",
						"thetext": "Added CVE as per http://www.openwall.com/lists/oss-security/2012/04/29/1"
					},
					{
						"isprivate": "0",
						"commentid": "4638684",
						"comment_count": "32",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2012-04-30 21:55:58 +0000",
						"thetext": "Florian Weimer noted the following observations:\n\n> CFB mode is only secure if the the IV is unpredictable and different                                                                                                                                                                                                          \n> for every message.                                                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                \nThere are a few additional requirements.  Without some form of message                                                                                                                                                                                                          \nauthentication, chosen-ciphertext attacks are still possible even with                                                                                                                                                                                                          \na random IV.                                                                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                \n> Because of this, and because the encryption key is shared for each                                                                                                                                                                                                            \n> database table (fields and rows), the same plaintext prefix is                                                                                                                                                                                                                \n> always encrypted to an identical and corresponding ciphertext                                                                                                                                                                                                                 \n> prefix.  As a result, an attacker with access to the database could                                                                                                                                                                                                           \n> figure out the plaintext values of encrypted text.                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                \nAnd you can group by encrypted column values in the database.  That's                                                                                                                                                                                                           \nwhy I'm not sure if it's actually possible to address this issue in a                                                                                                                                                                                                           \nsatisfying manner.\n\n\nThoughts?  I imagine, if he's accurate (no idea, not familiar with the software but I don't see why he wouldn't be spot-on here), then we may need to revist how we're handling this."
					},
					{
						"isprivate": "0",
						"commentid": "4642279",
						"comment_count": "33",
						"who": {
							"text": "tmraz",
							"name": "Tomas Mraz"
						},
						"bug_when": "2012-05-02 06:38:46 +0000",
						"thetext": "(In reply to comment #32)\n> Florian Weimer noted the following observations:\n> \n> And you can group by encrypted column values in the database.  That's           \n> why I'm not sure if it's actually possible to address this issue in a           \n> satisfying manner.\n\nI do not understand how would you group by encrypted column if the IV is random - or what he really means by this sentence.\n\nAlso I am not really sure if the chosen-ciphertext attack applies - it would require that the attacker has full write access to the database columns that are later decrypted and plaintext shown to the attacker - I am not sure it is really purpose of python-elixir encryption to protect against such attack although using OFB or CTR mode would be better in this regard."
					},
					{
						"isprivate": "0",
						"commentid": "4642491",
						"comment_count": "34",
						"who": {
							"text": "sochotni",
							"name": "Stanislav Ochotnicky"
						},
						"bug_when": "2012-05-02 08:25:32 +0000",
						"thetext": "(In reply to comment #32)\n> Florian Weimer noted the following observations:\n> \n> > CFB mode is only secure if the the IV is unpredictable and different\n> > for every message.                                                                        \n\nThe fix uses CBC mode not CFB\n\n> There are a few additional requirements.  Without some form of message\n> authentication, chosen-ciphertext attacks are still possible even with\n> a random IV.\n\npython-elixir is a thin ORM mapping layer on top of SQLAlchemy. Protection against chosen-ciphertext would be out of scope for this library.\n\n> > Because of this, and because the encryption key is shared for each\n> > database table (fields and rows), the same plaintext prefix is\n> > always encrypted to an identical and corresponding ciphertext\n> > prefix.  As a result, an attacker with access to the database could\n> > figure out the plaintext values of encrypted text.                                                                           \n\nNot true. We produce random IV for each row in the database. Even if you have 2 same plaintext fields they will be completely different in ciphertext.\n\nYes, users will have to migrate their data to be able to use new cipher algorithms. There is no other way to properly protect them unfortunately.\n\n> \n> And you can group by encrypted column values in the database.  That's \n> why I'm not sure if it's actually possible to address this issue in a \n> satisfying manner.\n\nIt's not without database migration.\n\n\n> Thoughts?  I imagine, if he's accurate (no idea, not familiar with the \n> software but I don't see why he wouldn't be spot-on here), then we may\n> need to revist how we're handling this.\n\nOur approach still seems OK to me. Did I miss anything?"
					},
					{
						"isprivate": "0",
						"commentid": "4642525",
						"comment_count": "35",
						"who": {
							"text": "tmraz",
							"name": "Tomas Mraz"
						},
						"bug_when": "2012-05-02 08:39:30 +0000",
						"thetext": "(In reply to comment #34)\n> The fix uses CBC mode not CFB\nCBC has the same properties in regards to random IV and chosen ciphertext attacks as CFB. But as the IV is random in the fix and chosen ciphertext attack is not considered in the model I think we are OK.\n\n> Our approach still seems OK to me. Did I miss anything?\nNope, it seems OK to me as well."
					},
					{
						"isprivate": "0",
						"commentid": "4644502",
						"comment_count": "36",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2012-05-02 17:29:41 +0000",
						"thetext": "Thanks for the clarification on the given questions.  Very much appreciated."
					},
					{
						"isprivate": "0",
						"commentid": "4650782",
						"comment_count": "37",
						"who": {
							"text": "fweimer",
							"name": "Florian Weimer"
						},
						"bug_when": "2012-05-04 12:40:07 +0000",
						"thetext": "(In reply to comment #33)\n> I do not understand how would you group by encrypted column if the IV is random\n> - or what he really means by this sentence.\n\nYou could do this before, when the encryption was convergent. I'm concerned that the fix (while appropriate from a crypto point of view, even though an AEAD would be better) breaks application functionality.  After all, it does break the encryption test case."
					},
					{
						"isprivate": "0",
						"commentid": "4650934",
						"comment_count": "38",
						"who": {
							"text": "mitr",
							"name": "Miloslav Trmač"
						},
						"bug_when": "2012-05-04 13:18:35 +0000",
						"thetext": "(In reply to comment #37)\n> I'm concerned\n> that the fix (while appropriate from a crypto point of view, even though an\n> AEAD would be better) breaks application functionality.  After all, it does\n> break the encryption test case.\n\nI was unsure what this refers to, so, to save others some time: the distributed tarball contains a \"test\" directory, but most tests are only in svn.\n\nAmong them is a test to the effect of:\n>    class Person(Entity):\n>        name = Field(String(50))\n>        password = Field(String(40))\n...\n>        acts_as_encrypted(for_fields=['password', 'ssn'], with_secret='secret')\nand (shortened)\n>    def test_two_consecutive_updates(self):\n>        jonathan = Person(\n>            name='Jonathan LaCour',\n>            password='s3cr3tw0RD',\n>        )\n...\n>        p = Person.get_by(name='Jonathan LaCour')\n>        assert p.password == 's3cr3tw0RD'\n>        session.flush()\n>        assert p.password == 'r\\\\x9d\\\\xa8\\\\xb4\\\\x8d|\\\\xffp\\\\xf5\\\\x0e'\n>        session.flush()\n>        assert p.password == 'r\\\\x9d\\\\xa8\\\\xb4\\\\x8d|\\\\xffp\\\\xf5\\\\x0e'\n\ntesting that the ciphertext will have a specific, constant, value.\n\n\nIMHO:\n* Sorting on the encrypted values while the encryption is incorrect can't be helped; migrating the database will stop that attack from working.\n\n* The patch does not change the encryption mode by default, so nothing is broken by a mere package update.  OTOH, if we want to fix the crypto, we simply have to break this test, and applications that would be broken by the change need to be modified at the time with_aes is set to True."
					},
					{
						"isprivate": "0",
						"commentid": "4650943",
						"comment_count": "39",
						"who": {
							"text": "mitr",
							"name": "Miloslav Trmač"
						},
						"bug_when": "2012-05-04 13:20:49 +0000",
						"thetext": "Created attachment 582122\nA possible test case patch\n\nThis is how the test case could be updated for with_aes=True."
					},
					{
						"isprivate": "0",
						"commentid": "4674805",
						"comment_count": "40",
						"who": {
							"text": "fweimer",
							"name": "Florian Weimer"
						},
						"bug_when": "2012-05-15 15:02:26 +0000",
						"thetext": "(In reply to comment #38)\n> I was unsure what this refers to, so, to save others some time: the distributed\n> tarball contains a \"test\" directory, but most tests are only in svn.\n\nOops.  I wasn't aware of that.\n> IMHO:\n> * Sorting on the encrypted values while the encryption is incorrect can't be\n> helped; migrating the database will stop that attack from working.\n\nI'm not sure if it is incorrect if it works.  But if you think this is really important to fix (even though upstream appears unlikely to pick up the patch), I think the proposed opt-in approach looks okay."
					},
					{
						"isprivate": "0",
						"commentid": "5611292",
						"comment_count": "43",
						"who": {
							"text": "scorneli",
							"name": "Stefan Cornelius"
						},
						"bug_when": "2013-03-19 13:08:19 +0000",
						"thetext": "Created python-elixir tracking bugs for this issue\n\nAffects: fedora-all [bug 923220]"
					},
					{
						"isprivate": "0",
						"commentid": "5611300",
						"comment_count": "44",
						"who": {
							"text": "scorneli",
							"name": "Stefan Cornelius"
						},
						"bug_when": "2013-03-19 13:09:24 +0000",
						"thetext": "Created python-elixir tracking bugs for this issue\n\nAffects: epel-5 [bug 923221]"
					},
					{
						"isprivate": "0",
						"commentid": "5785075",
						"comment_count": "46",
						"who": {
							"text": "a.badger",
							"name": "Toshio Ernie Kuratomi"
						},
						"bug_when": "2013-03-31 13:35:11 +0000",
						"thetext": "I'm  thinking  of orphaning  elixir (I  don't  use it anymore) but  wanted  to  see  this  wrapped  up  before  doing  so.\n\nsochotni,  your  patch  looks  good  to  me.   elixir  upstream  seems  to  be  dying.   how  do  you  feel  about  applying  your  patch  locally?   would  you  want  me  to  do  that  our  would  you  like  to  just  take  over ( you  already  have  commit)?"
					},
					{
						"isprivate": "0",
						"commentid": "5789867",
						"comment_count": "47",
						"who": {
							"text": "mitr",
							"name": "Miloslav Trmač"
						},
						"bug_when": "2013-04-02 12:56:28 +0000",
						"thetext": "(In reply to comment #46)\n> I'm  thinking  of orphaning  elixir (I  don't  use it anymore) but  wanted \n> to  see  this  wrapped  up  before  doing  so.\n> \n> sochotni,  your  patch  looks  good  to  me.   elixir  upstream  seems  to \n> be  dying.   how  do  you  feel  about  applying  your  patch  locally?  \n> would  you  want  me  to  do  that  our  would  you  like  to  just  take \n> over ( you  already  have  commit)?\n\nEarlier I have looked for uses of python-elixir in Fedora, and found none.  \n\nWould it make sense to not only orphan the package, but also remove it from the distribution (and modify TurboGears not to require it)?  It's rather draconian (and unkind to out-of-Fedora uses of elixir through TurboGears), but perhaps still worth it - an unmaintained package doing crypto makes me nervous.\n\nI don't know.  I'm not at all certain that dropping the package altogether is a good idea - I'm just noting this as a possible option."
					},
					{
						"isprivate": "0",
						"commentid": "5790100",
						"comment_count": "48",
						"who": {
							"text": "a.badger",
							"name": "Toshio Ernie Kuratomi"
						},
						"bug_when": "2013-04-02 13:48:32 +0000",
						"thetext": "I  would  be fine dropping the package in f19/ rawhide  if nothing requires it.  but we still need to fix this as we can't  drop packages in released versions of fedora.   there's  no  way to remove the package from the machines of users who may have installed it.\n\nI'm  leery off making promises to retire this before looking at why turbogears  needs it but I suspect it's  just their preferred package for doing database migrations. if so,  python-alembic can fill  the need for new software."
					},
					{
						"isprivate": "0",
						"commentid": "7398257",
						"comment_count": "49",
						"who": {
							"text": "gwync",
							"name": "Gwyn Ciesla"
						},
						"bug_when": "2014-08-19 14:43:09 +0000",
						"thetext": "An progress on this?  I maintain moodle which needs this several layers down the chain in el5 where it's orphaned.  Is it worth my picking unorphaning it?"
					},
					{
						"isprivate": "0",
						"commentid": "7398313",
						"comment_count": "50",
						"who": {
							"text": "mitr",
							"name": "Miloslav Trmač"
						},
						"bug_when": "2014-08-19 14:51:51 +0000",
						"thetext": "(In reply to Jon Ciesla from comment #49)\n> An progress on this?  I maintain moodle which needs this several layers down\n> the chain in el5 where it's orphaned.\n\nDo the layers down the chain actually use acts_as_encrypted?"
					},
					{
						"isprivate": "0",
						"commentid": "7403955",
						"comment_count": "51",
						"who": {
							"text": "dcallagh",
							"name": "Dan Callaghan"
						},
						"bug_when": "2014-08-20 22:56:05 +0000",
						"thetext": "Stano, in comment 42 you mention having a patch, could you please attach it here?\n\nI would also be in favour of just patching TurboGears not to require python-elixir and letting the package be retired. I had a look through TurboGears, there is no hard runtime requirement on elixir (it's imported with except ImportError: pass). The quickstart tool can optionally include Elixir support in the generated project, so we could either patch that option out entirely, or just leave it up to the user to satisfy their application's dependency if they do pass --elixir. But really nobody should be starting a new project with TurboGears1 nowadays anyway.\n\nJon, do you know if your application (is it Moodle, or some other transitive dep?) is actually *using* Elixir or is it just in the dependency chain because of TurboGears?"
					},
					{
						"isprivate": "0",
						"commentid": "7403964",
						"comment_count": "52",
						"who": {
							"text": "dcallagh",
							"name": "Dan Callaghan"
						},
						"bug_when": "2014-08-20 22:59:28 +0000",
						"thetext": "(In reply to Dan Callaghan from comment #51)\n> Stano, in comment 42 you mention having a patch, could you please attach it\n> here?\n\nAh, I clicked through to the CVE and found the upstream issue Stano filed with his patch:\n\nhttp://elixir.ematia.de/trac/ticket/119\nhttps://sochotni.fedorapeople.org/python-elixir-aes-encryption-addition.patch"
					},
					{
						"isprivate": "0",
						"commentid": "7404014",
						"comment_count": "53",
						"who": {
							"text": "dcallagh",
							"name": "Dan Callaghan"
						},
						"bug_when": "2014-08-20 23:38:38 +0000",
						"thetext": "Oops, I just realised the patch is already attached here. Sorry for the noise.\n\nSo I took the EPEL7 branch of python-elixir a few weeks back, since I need it for the TurboGears1 stack which I am now maintaining in EPEL7 (I'm not actually using Elixir anywhere).\n\nThe patch applies cleanly on Elixir 0.7.1, and I have backported it to Elixir 0.5.0 for EPEL5 as well. So I will take this package in EPEL5 and all Fedora branches and apply the patch, unless there are any objections."
					},
					{
						"isprivate": "0",
						"commentid": "7413558",
						"comment_count": "54",
						"who": {
							"text": "dcallagh",
							"name": "Dan Callaghan"
						},
						"bug_when": "2014-08-25 03:21:31 +0000",
						"thetext": "(In reply to Dan Callaghan from comment #53)\n> So I will take this package in EPEL5 and all\n> Fedora branches and apply the patch\n\nDone."
					},
					{
						"isprivate": "0",
						"commentid": "7463884",
						"comment_count": "55",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-09-09 22:17:33 +0000",
						"thetext": "python-elixir-0.7.1-14.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7463914",
						"comment_count": "56",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-09-09 22:21:10 +0000",
						"thetext": "python-elixir-0.7.1-14.fc19 has been pushed to the Fedora 19 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "12955702",
						"comment_count": "57",
						"who": {
							"text": "prodsec-dev",
							"name": "Product Security DevOps Team"
						},
						"bug_when": "2019-07-12 13:09:01 +0000",
						"thetext": "This bug is now closed. Further updates for individual products will be reflected on the CVE page(s):\n\nhttps://access.redhat.com/security/cve/cve-2012-2146"
					}
				]
			}
		},
		{
			"bug_id": 923221,
			"security": true,
			"title": "CVE-2012-2146 python-elixir: weak use of crypto can leak information [epel-5]",
			"bugzilla": {
				"bug_id": "923221",
				"creation_ts": "2013-03-19 13:09:13 +0000",
				"short_desc": "CVE-2012-2146 python-elixir: weak use of crypto can leak information [epel-5]",
				"delta_ts": "2014-09-24 03:42:14 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Security, SecurityTracking",
				"priority": "medium",
				"bug_severity": "medium",
				"blocked": [
					{
						"bug_id": "810013",
						"alias": "CVE-2012-2146",
						"creation_ts": "2012-04-04 22:10:58 +0000",
						"short_desc": "CVE-2012-2146 python-elixir: weak use of crypto can leak information",
						"delta_ts": "2019-09-29 12:51:39 +0000",
						"bug_status": "CLOSED",
						"resolution": "WONTFIX",
						"keywords": "Security",
						"priority": "medium",
						"bug_severity": "medium",
						"depends_on": [
							"923220",
							"923221"
						],
						"blocked": [
							{
								"bug_id": "817150",
								"error": "NotPermitted"
							}
						],
						"long_desc": [
							{
								"isprivate": "0",
								"commentid": "4574280",
								"comment_count": "0",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2012-04-04 22:10:58 +0000",
								"thetext": "It was reported that python-elixir, a library for ORM mapping on top of SQLAlchemy with support for encrypting data stored in a database, suffers from weak use of cryptography.  It uses Blowfish in CFB mode, which has an additional parameter (IV), which is not specified and thus defaults to zero.  CFB mode is only secure if the the IV is unpredictable and different for every message.  Because of this, and because the encryption key is shared for each database table (fields and rows), the same plaintext prefix is always encrypted to an identical and corresponding ciphertext prefix.  As a result, an attacker with access to the database could figure out the plaintext values of encrypted text."
							},
							{
								"isprivate": "0",
								"commentid": "4598753",
								"comment_count": "20",
								"who": {
									"text": "sochotni",
									"name": "Stanislav Ochotnicky"
								},
								"bug_when": "2012-04-17 09:25:13 +0000",
								"thetext": "Created attachment 577963\nmigration script tests\n\nI have created a simple set of scripts to test if data migration would be feasible. It seems that with modifications, data could be migrated like this:\n 1. prepare migration script, backup database etc\n 2. stop all database work\n 3. run migration script\n 4. install errata for this bug\n 5. continue working as before\n\nI am using monkey-patching to \"fix\" old python-elixir encryption code without actually touching the source files so we can sort of use fixed code without installing the errata.\n\nMigration script would have to use the encryption method expected. In this case I've used the first variant, i.e. keep using python-crypto. We could make the migration script a bit more generic where administrators doing the migration would just have to put in table names that contain encrypted data. I was also thinking about a way to prevent accidental running of the script twice, which would cause the data to be encrypted twice and didn't come up with anything short of creating additional table in the database that would contain already converted table names. Not a hard thing to do actually, but not sure it's worth doing."
							},
							{
								"isprivate": "0",
								"commentid": "4598794",
								"comment_count": "21",
								"who": {
									"text": "tmraz",
									"name": "Tomas Mraz"
								},
								"bug_when": "2012-04-17 09:39:55 +0000",
								"thetext": "If it is necessary to migrate, it should be definitely migrated to AES-128 cipher and m2crypto."
							},
							{
								"isprivate": "0",
								"commentid": "4603171",
								"comment_count": "24",
								"who": {
									"text": "sochotni",
									"name": "Stanislav Ochotnicky"
								},
								"bug_when": "2012-04-18 15:11:53 +0000",
								"thetext": "Created attachment 578385\nProposed patch to fix the bug\n\nAfter talking to mitr, I've contacted upstream[1]. \n\nI have a patch that adds additional encryption methods (turned off by default so that we don't break stuff when users install errata without migrating first). It uses AES/python-crypto to encrypt so we don't have to do major rewrites. Attached patch is a complete proposed change to python-elixir package.\n\nI've also updated example migration scripts to reflect this change\n\n\n[1] http://groups.google.com/group/sqlelixir/browse_thread/thread/efc16227514cffa"
							},
							{
								"isprivate": "0",
								"commentid": "4635034",
								"comment_count": "28",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2012-04-27 20:34:34 +0000",
								"thetext": "This has also been reported upstream, although currently there are no comments:\n\nhttp://elixir.ematia.de/trac/ticket/119\n\n(and no response to the message that Stanislav notes in comment #24"
							},
							{
								"isprivate": "0",
								"commentid": "4635086",
								"comment_count": "29",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2012-04-27 20:57:40 +0000",
								"thetext": "CVE and peer review requested:\n\nhttp://www.openwall.com/lists/oss-security/2012/04/27/8"
							},
							{
								"isprivate": "0",
								"commentid": "4636195",
								"comment_count": "31",
								"who": {
									"text": "kseifried",
									"name": "Kurt Seifried"
								},
								"bug_when": "2012-04-29 06:49:52 +0000",
								"thetext": "Added CVE as per http://www.openwall.com/lists/oss-security/2012/04/29/1"
							},
							{
								"isprivate": "0",
								"commentid": "4638684",
								"comment_count": "32",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2012-04-30 21:55:58 +0000",
								"thetext": "Florian Weimer noted the following observations:\n\n> CFB mode is only secure if the the IV is unpredictable and different                                                                                                                                                                                                          \n> for every message.                                                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                \nThere are a few additional requirements.  Without some form of message                                                                                                                                                                                                          \nauthentication, chosen-ciphertext attacks are still possible even with                                                                                                                                                                                                          \na random IV.                                                                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                \n> Because of this, and because the encryption key is shared for each                                                                                                                                                                                                            \n> database table (fields and rows), the same plaintext prefix is                                                                                                                                                                                                                \n> always encrypted to an identical and corresponding ciphertext                                                                                                                                                                                                                 \n> prefix.  As a result, an attacker with access to the database could                                                                                                                                                                                                           \n> figure out the plaintext values of encrypted text.                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                \nAnd you can group by encrypted column values in the database.  That's                                                                                                                                                                                                           \nwhy I'm not sure if it's actually possible to address this issue in a                                                                                                                                                                                                           \nsatisfying manner.\n\n\nThoughts?  I imagine, if he's accurate (no idea, not familiar with the software but I don't see why he wouldn't be spot-on here), then we may need to revist how we're handling this."
							},
							{
								"isprivate": "0",
								"commentid": "4642279",
								"comment_count": "33",
								"who": {
									"text": "tmraz",
									"name": "Tomas Mraz"
								},
								"bug_when": "2012-05-02 06:38:46 +0000",
								"thetext": "(In reply to comment #32)\n> Florian Weimer noted the following observations:\n> \n> And you can group by encrypted column values in the database.  That's           \n> why I'm not sure if it's actually possible to address this issue in a           \n> satisfying manner.\n\nI do not understand how would you group by encrypted column if the IV is random - or what he really means by this sentence.\n\nAlso I am not really sure if the chosen-ciphertext attack applies - it would require that the attacker has full write access to the database columns that are later decrypted and plaintext shown to the attacker - I am not sure it is really purpose of python-elixir encryption to protect against such attack although using OFB or CTR mode would be better in this regard."
							},
							{
								"isprivate": "0",
								"commentid": "4642491",
								"comment_count": "34",
								"who": {
									"text": "sochotni",
									"name": "Stanislav Ochotnicky"
								},
								"bug_when": "2012-05-02 08:25:32 +0000",
								"thetext": "(In reply to comment #32)\n> Florian Weimer noted the following observations:\n> \n> > CFB mode is only secure if the the IV is unpredictable and different\n> > for every message.                                                                        \n\nThe fix uses CBC mode not CFB\n\n> There are a few additional requirements.  Without some form of message\n> authentication, chosen-ciphertext attacks are still possible even with\n> a random IV.\n\npython-elixir is a thin ORM mapping layer on top of SQLAlchemy. Protection against chosen-ciphertext would be out of scope for this library.\n\n> > Because of this, and because the encryption key is shared for each\n> > database table (fields and rows), the same plaintext prefix is\n> > always encrypted to an identical and corresponding ciphertext\n> > prefix.  As a result, an attacker with access to the database could\n> > figure out the plaintext values of encrypted text.                                                                           \n\nNot true. We produce random IV for each row in the database. Even if you have 2 same plaintext fields they will be completely different in ciphertext.\n\nYes, users will have to migrate their data to be able to use new cipher algorithms. There is no other way to properly protect them unfortunately.\n\n> \n> And you can group by encrypted column values in the database.  That's \n> why I'm not sure if it's actually possible to address this issue in a \n> satisfying manner.\n\nIt's not without database migration.\n\n\n> Thoughts?  I imagine, if he's accurate (no idea, not familiar with the \n> software but I don't see why he wouldn't be spot-on here), then we may\n> need to revist how we're handling this.\n\nOur approach still seems OK to me. Did I miss anything?"
							},
							{
								"isprivate": "0",
								"commentid": "4642525",
								"comment_count": "35",
								"who": {
									"text": "tmraz",
									"name": "Tomas Mraz"
								},
								"bug_when": "2012-05-02 08:39:30 +0000",
								"thetext": "(In reply to comment #34)\n> The fix uses CBC mode not CFB\nCBC has the same properties in regards to random IV and chosen ciphertext attacks as CFB. But as the IV is random in the fix and chosen ciphertext attack is not considered in the model I think we are OK.\n\n> Our approach still seems OK to me. Did I miss anything?\nNope, it seems OK to me as well."
							},
							{
								"isprivate": "0",
								"commentid": "4644502",
								"comment_count": "36",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2012-05-02 17:29:41 +0000",
								"thetext": "Thanks for the clarification on the given questions.  Very much appreciated."
							},
							{
								"isprivate": "0",
								"commentid": "4650782",
								"comment_count": "37",
								"who": {
									"text": "fweimer",
									"name": "Florian Weimer"
								},
								"bug_when": "2012-05-04 12:40:07 +0000",
								"thetext": "(In reply to comment #33)\n> I do not understand how would you group by encrypted column if the IV is random\n> - or what he really means by this sentence.\n\nYou could do this before, when the encryption was convergent. I'm concerned that the fix (while appropriate from a crypto point of view, even though an AEAD would be better) breaks application functionality.  After all, it does break the encryption test case."
							},
							{
								"isprivate": "0",
								"commentid": "4650934",
								"comment_count": "38",
								"who": {
									"text": "mitr",
									"name": "Miloslav Trmač"
								},
								"bug_when": "2012-05-04 13:18:35 +0000",
								"thetext": "(In reply to comment #37)\n> I'm concerned\n> that the fix (while appropriate from a crypto point of view, even though an\n> AEAD would be better) breaks application functionality.  After all, it does\n> break the encryption test case.\n\nI was unsure what this refers to, so, to save others some time: the distributed tarball contains a \"test\" directory, but most tests are only in svn.\n\nAmong them is a test to the effect of:\n>    class Person(Entity):\n>        name = Field(String(50))\n>        password = Field(String(40))\n...\n>        acts_as_encrypted(for_fields=['password', 'ssn'], with_secret='secret')\nand (shortened)\n>    def test_two_consecutive_updates(self):\n>        jonathan = Person(\n>            name='Jonathan LaCour',\n>            password='s3cr3tw0RD',\n>        )\n...\n>        p = Person.get_by(name='Jonathan LaCour')\n>        assert p.password == 's3cr3tw0RD'\n>        session.flush()\n>        assert p.password == 'r\\\\x9d\\\\xa8\\\\xb4\\\\x8d|\\\\xffp\\\\xf5\\\\x0e'\n>        session.flush()\n>        assert p.password == 'r\\\\x9d\\\\xa8\\\\xb4\\\\x8d|\\\\xffp\\\\xf5\\\\x0e'\n\ntesting that the ciphertext will have a specific, constant, value.\n\n\nIMHO:\n* Sorting on the encrypted values while the encryption is incorrect can't be helped; migrating the database will stop that attack from working.\n\n* The patch does not change the encryption mode by default, so nothing is broken by a mere package update.  OTOH, if we want to fix the crypto, we simply have to break this test, and applications that would be broken by the change need to be modified at the time with_aes is set to True."
							},
							{
								"isprivate": "0",
								"commentid": "4650943",
								"comment_count": "39",
								"who": {
									"text": "mitr",
									"name": "Miloslav Trmač"
								},
								"bug_when": "2012-05-04 13:20:49 +0000",
								"thetext": "Created attachment 582122\nA possible test case patch\n\nThis is how the test case could be updated for with_aes=True."
							},
							{
								"isprivate": "0",
								"commentid": "4674805",
								"comment_count": "40",
								"who": {
									"text": "fweimer",
									"name": "Florian Weimer"
								},
								"bug_when": "2012-05-15 15:02:26 +0000",
								"thetext": "(In reply to comment #38)\n> I was unsure what this refers to, so, to save others some time: the distributed\n> tarball contains a \"test\" directory, but most tests are only in svn.\n\nOops.  I wasn't aware of that.\n> IMHO:\n> * Sorting on the encrypted values while the encryption is incorrect can't be\n> helped; migrating the database will stop that attack from working.\n\nI'm not sure if it is incorrect if it works.  But if you think this is really important to fix (even though upstream appears unlikely to pick up the patch), I think the proposed opt-in approach looks okay."
							},
							{
								"isprivate": "0",
								"commentid": "5611292",
								"comment_count": "43",
								"who": {
									"text": "scorneli",
									"name": "Stefan Cornelius"
								},
								"bug_when": "2013-03-19 13:08:19 +0000",
								"thetext": "Created python-elixir tracking bugs for this issue\n\nAffects: fedora-all [bug 923220]"
							},
							{
								"isprivate": "0",
								"commentid": "5611300",
								"comment_count": "44",
								"who": {
									"text": "scorneli",
									"name": "Stefan Cornelius"
								},
								"bug_when": "2013-03-19 13:09:24 +0000",
								"thetext": "Created python-elixir tracking bugs for this issue\n\nAffects: epel-5 [bug 923221]"
							},
							{
								"isprivate": "0",
								"commentid": "5785075",
								"comment_count": "46",
								"who": {
									"text": "a.badger",
									"name": "Toshio Ernie Kuratomi"
								},
								"bug_when": "2013-03-31 13:35:11 +0000",
								"thetext": "I'm  thinking  of orphaning  elixir (I  don't  use it anymore) but  wanted  to  see  this  wrapped  up  before  doing  so.\n\nsochotni,  your  patch  looks  good  to  me.   elixir  upstream  seems  to  be  dying.   how  do  you  feel  about  applying  your  patch  locally?   would  you  want  me  to  do  that  our  would  you  like  to  just  take  over ( you  already  have  commit)?"
							},
							{
								"isprivate": "0",
								"commentid": "5789867",
								"comment_count": "47",
								"who": {
									"text": "mitr",
									"name": "Miloslav Trmač"
								},
								"bug_when": "2013-04-02 12:56:28 +0000",
								"thetext": "(In reply to comment #46)\n> I'm  thinking  of orphaning  elixir (I  don't  use it anymore) but  wanted \n> to  see  this  wrapped  up  before  doing  so.\n> \n> sochotni,  your  patch  looks  good  to  me.   elixir  upstream  seems  to \n> be  dying.   how  do  you  feel  about  applying  your  patch  locally?  \n> would  you  want  me  to  do  that  our  would  you  like  to  just  take \n> over ( you  already  have  commit)?\n\nEarlier I have looked for uses of python-elixir in Fedora, and found none.  \n\nWould it make sense to not only orphan the package, but also remove it from the distribution (and modify TurboGears not to require it)?  It's rather draconian (and unkind to out-of-Fedora uses of elixir through TurboGears), but perhaps still worth it - an unmaintained package doing crypto makes me nervous.\n\nI don't know.  I'm not at all certain that dropping the package altogether is a good idea - I'm just noting this as a possible option."
							},
							{
								"isprivate": "0",
								"commentid": "5790100",
								"comment_count": "48",
								"who": {
									"text": "a.badger",
									"name": "Toshio Ernie Kuratomi"
								},
								"bug_when": "2013-04-02 13:48:32 +0000",
								"thetext": "I  would  be fine dropping the package in f19/ rawhide  if nothing requires it.  but we still need to fix this as we can't  drop packages in released versions of fedora.   there's  no  way to remove the package from the machines of users who may have installed it.\n\nI'm  leery off making promises to retire this before looking at why turbogears  needs it but I suspect it's  just their preferred package for doing database migrations. if so,  python-alembic can fill  the need for new software."
							},
							{
								"isprivate": "0",
								"commentid": "7398257",
								"comment_count": "49",
								"who": {
									"text": "gwync",
									"name": "Gwyn Ciesla"
								},
								"bug_when": "2014-08-19 14:43:09 +0000",
								"thetext": "An progress on this?  I maintain moodle which needs this several layers down the chain in el5 where it's orphaned.  Is it worth my picking unorphaning it?"
							},
							{
								"isprivate": "0",
								"commentid": "7398313",
								"comment_count": "50",
								"who": {
									"text": "mitr",
									"name": "Miloslav Trmač"
								},
								"bug_when": "2014-08-19 14:51:51 +0000",
								"thetext": "(In reply to Jon Ciesla from comment #49)\n> An progress on this?  I maintain moodle which needs this several layers down\n> the chain in el5 where it's orphaned.\n\nDo the layers down the chain actually use acts_as_encrypted?"
							},
							{
								"isprivate": "0",
								"commentid": "7403955",
								"comment_count": "51",
								"who": {
									"text": "dcallagh",
									"name": "Dan Callaghan"
								},
								"bug_when": "2014-08-20 22:56:05 +0000",
								"thetext": "Stano, in comment 42 you mention having a patch, could you please attach it here?\n\nI would also be in favour of just patching TurboGears not to require python-elixir and letting the package be retired. I had a look through TurboGears, there is no hard runtime requirement on elixir (it's imported with except ImportError: pass). The quickstart tool can optionally include Elixir support in the generated project, so we could either patch that option out entirely, or just leave it up to the user to satisfy their application's dependency if they do pass --elixir. But really nobody should be starting a new project with TurboGears1 nowadays anyway.\n\nJon, do you know if your application (is it Moodle, or some other transitive dep?) is actually *using* Elixir or is it just in the dependency chain because of TurboGears?"
							},
							{
								"isprivate": "0",
								"commentid": "7403964",
								"comment_count": "52",
								"who": {
									"text": "dcallagh",
									"name": "Dan Callaghan"
								},
								"bug_when": "2014-08-20 22:59:28 +0000",
								"thetext": "(In reply to Dan Callaghan from comment #51)\n> Stano, in comment 42 you mention having a patch, could you please attach it\n> here?\n\nAh, I clicked through to the CVE and found the upstream issue Stano filed with his patch:\n\nhttp://elixir.ematia.de/trac/ticket/119\nhttps://sochotni.fedorapeople.org/python-elixir-aes-encryption-addition.patch"
							},
							{
								"isprivate": "0",
								"commentid": "7404014",
								"comment_count": "53",
								"who": {
									"text": "dcallagh",
									"name": "Dan Callaghan"
								},
								"bug_when": "2014-08-20 23:38:38 +0000",
								"thetext": "Oops, I just realised the patch is already attached here. Sorry for the noise.\n\nSo I took the EPEL7 branch of python-elixir a few weeks back, since I need it for the TurboGears1 stack which I am now maintaining in EPEL7 (I'm not actually using Elixir anywhere).\n\nThe patch applies cleanly on Elixir 0.7.1, and I have backported it to Elixir 0.5.0 for EPEL5 as well. So I will take this package in EPEL5 and all Fedora branches and apply the patch, unless there are any objections."
							},
							{
								"isprivate": "0",
								"commentid": "7413558",
								"comment_count": "54",
								"who": {
									"text": "dcallagh",
									"name": "Dan Callaghan"
								},
								"bug_when": "2014-08-25 03:21:31 +0000",
								"thetext": "(In reply to Dan Callaghan from comment #53)\n> So I will take this package in EPEL5 and all\n> Fedora branches and apply the patch\n\nDone."
							},
							{
								"isprivate": "0",
								"commentid": "7463884",
								"comment_count": "55",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-09-09 22:17:33 +0000",
								"thetext": "python-elixir-0.7.1-14.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "7463914",
								"comment_count": "56",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-09-09 22:21:10 +0000",
								"thetext": "python-elixir-0.7.1-14.fc19 has been pushed to the Fedora 19 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "12955702",
								"comment_count": "57",
								"who": {
									"text": "prodsec-dev",
									"name": "Product Security DevOps Team"
								},
								"bug_when": "2019-07-12 13:09:01 +0000",
								"thetext": "This bug is now closed. Further updates for individual products will be reflected on the CVE page(s):\n\nhttps://access.redhat.com/security/cve/cve-2012-2146"
							}
						]
					}
				],
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "5611298",
						"comment_count": "0",
						"who": {
							"text": "scorneli",
							"name": "Stefan Cornelius"
						},
						"bug_when": "2013-03-19 13:09:13 +0000",
						"thetext": "\nThis is an automatically created tracking bug!  It was created to ensure\nthat one or more security vulnerabilities are fixed in affected versions\nof Fedora EPEL.\n\nFor comments that are specific to the vulnerability please use bugs filed\nagainst the \"Security Response\" product referenced in the \"Blocks\" field.\n\nFor more information see:\nhttp://fedoraproject.org/wiki/Security/TrackingBugs\n\nWhen creating a Bodhi update request, please use the bodhi submission link\nnoted in the next comment(s).  This will include the bug IDs of this\ntracking bug as well as the relevant top-level CVE bugs.\n\nPlease also mention the CVE IDs being fixed in the RPM changelog and the\nBodhi notes field when available.\n\nepel-5 tracking bug for python-elixir: see blocks bug list for full details of the security issue(s).\n\n[bug automatically created by: add-tracking-bugs]"
					},
					{
						"isprivate": "0",
						"commentid": "5611299",
						"comment_count": "1",
						"who": {
							"text": "scorneli",
							"name": "Stefan Cornelius"
						},
						"bug_when": "2013-03-19 13:09:22 +0000",
						"thetext": "\nPlease use the following update submission link to create the Bodhi\nrequest for this issue as it contains the top-level parent bug(s) as well\nas this tracking bug.  This will ensure that all associated bugs get\nupdated when new packages are pushed to stable.\n\nPlease also ensure that the \"Close bugs when update is stable\" option\nremains checked.\n\nBodhi update submission link:\nhttps://admin.fedoraproject.org/updates/new/?type_=security&bugs=810013,923221"
					},
					{
						"isprivate": "0",
						"commentid": "7413555",
						"comment_count": "2",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-08-25 03:20:47 +0000",
						"thetext": "python-elixir-0.5.0-2.el5 has been submitted as an update for Fedora EPEL 5.\nhttps://admin.fedoraproject.org/updates/python-elixir-0.5.0-2.el5"
					},
					{
						"isprivate": "0",
						"commentid": "7432183",
						"comment_count": "3",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-08-29 19:43:18 +0000",
						"thetext": "Package python-elixir-0.5.0-2.el5:\n* should fix your issue,\n* was pushed to the Fedora EPEL 5 testing repository,\n* should be available at your local mirror within two days.\nUpdate it with:\n# su -c 'yum update --enablerepo=epel-testing python-elixir-0.5.0-2.el5'\nas soon as you are able to.\nPlease go to the following url:\nhttps://admin.fedoraproject.org/updates/FEDORA-EPEL-2014-2308/python-elixir-0.5.0-2.el5\nthen log in and leave karma (feedback)."
					},
					{
						"isprivate": "0",
						"commentid": "7512836",
						"comment_count": "4",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-09-24 03:42:14 +0000",
						"thetext": "python-elixir-0.5.0-2.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
					}
				]
			}
		}
	],
	"builds": [
		{
			"nvr": "python-elixir-0.5.0-2.el5",
			"signed": true,
			"type": "rpm",
			"package": {
				"noarch": [
					{
						"name": "python-elixir",
						"version": "0.5.0",
						"release": "2.el5",
						"arch": "noarch"
					}
				],
				"src": [
					{
						"name": "python-elixir",
						"version": "0.5.0",
						"release": "2.el5",
						"arch": "src"
					}
				]
			}
		}
	],
	"close_bugs": true,
	"comments": [
		{
			"id": 234188,
			"text": "This update has been submitted for testing by dcallagh. ",
			"timestamp": "2014-08-25 03:20:56",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234189,
			"text": "This update is currently being pushed to the Fedora EPEL 5 testing updates repository.",
			"timestamp": "2014-08-28 16:17:51",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234190,
			"text": "This update is currently being pushed to the Fedora EPEL 5 testing updates repository.",
			"timestamp": "2014-08-29 17:41:48",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234191,
			"text": "This update has been pushed to testing",
			"timestamp": "2014-08-29 19:43:06",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234192,
			"text": "This update has reached 14 days in testing and can be pushed to stable now if the maintainer wishes",
			"timestamp": "2014-09-12 21:18:21",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234193,
			"text": "This update has been submitted for stable by dcallagh. ",
			"timestamp": "2014-09-14 22:00:05",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234194,
			"text": "This update is currently being pushed to the Fedora EPEL 5 stable updates repository.",
			"timestamp": "2014-09-19 03:11:20",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234195,
			"text": "This update is currently being pushed to the Fedora EPEL 5 stable updates repository.",
			"timestamp": "2014-09-23 17:59:07",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234196,
			"text": "This update is currently being pushed to the Fedora EPEL 5 stable updates repository.",
			"timestamp": "2014-09-23 18:02:37",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 234197,
			"text": "This update has been pushed to stable",
			"timestamp": "2014-09-24 03:41:39",
			"update_id": 29239,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		}
	],
	"content_type": "rpm",
	"date_pushed": "2014-09-24 03:41:39",
	"date_stable": "2014-09-24 03:41:39",
	"date_submitted": "2014-08-25 03:20:49",
	"date_testing": "2014-08-29 19:43:06",
	"notes": "[CVE-2012-2146] The 'acts_as_encrypted' feature of Elixir does not correctly initialize the random seed for the Blowfish encryption algorithm, and is therefore insecure. This option adds a new optional AES mode which does not suffer this problem, plus a warning is now printed when insecure Blowfish encryption is used.",
	"pushed": true,
	"release": {
		"branch": "el5",
		"candidate_tag": "dist-5E-epel-testing-candidate",
		"composed_by_bodhi": true,
		"dist_tag": "dist-5E-epel",
		"id_prefix": "FEDORA-EPEL",
		"long_name": "Fedora EPEL 5",
		"mail_template": "fedora_epel_legacy_errata_template",
		"name": "EL-5",
		"override_tag": "dist-5E-epel-override",
		"package_manager": "unspecified",
		"stable_tag": "dist-5E-epel",
		"state": "archived",
		"testing_tag": "dist-5E-epel-testing",
		"version": "5"
	},
	"severity": "unspecified",
	"stable_karma": 3,
	"status": "stable",
	"suggest": "unspecified",
	"title": "python-elixir-0.5.0-2.el5",
	"type": "security",
	"url": "https://bodhi.fedoraproject.org/updates/FEDORA-EPEL-2014-2308",
	"unstable_karma": -3,
	"updateid": "FEDORA-EPEL-2014-2308",
	"user": {
		"avatar": "https://seccdn.libravatar.org/avatar/47d4f26213353159d7b3cdd0069d424f0c984bcd5d0d32fa5039817f45797ad3?s=24&d=retro",
		"email": "djc@djc.id.au",
		"groups": [
			{
				"name": "packager"
			},
			{
				"name": "ipausers"
			},
			{
				"name": "fedora-contributor"
			},
			{
				"name": "signed_fpca"
			},
			{
				"name": "fedorabugs"
			},
			{
				"name": "modularity-wg"
			},
			{
				"name": "qa-beaker-user"
			},
			{
				"name": "qa-automation-shell"
			},
			{
				"name": "gitrhts"
			},
			{
				"name": "gitbeaker"
			},
			{
				"name": "gitbeah"
			}
		],
		"id": 560,
		"name": "dcallagh",
		"openid": "dcallagh.id.fedoraproject.org"
	},
	"version_hash": "4fcec4f9fc87e029ff1d7d6bb95f0d4c418100b7"
}
