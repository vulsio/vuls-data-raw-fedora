{
	"alias": "FEDORA-EPEL-2014-1651",
	"bugs": [
		{
			"bug_id": 1051421,
			"parent": true,
			"security": true,
			"title": "CVE-2014-1402 python-jinja2: FileSystemBytecodeCache insecure cache temporary file use",
			"bugzilla": {
				"bug_id": "1051421",
				"alias": "CVE-2014-1402",
				"creation_ts": "2014-01-10 09:36:01 +0000",
				"short_desc": "CVE-2014-1402 python-jinja2: FileSystemBytecodeCache insecure cache temporary file use",
				"delta_ts": "2021-02-17 07:00:51 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Reopened, Security",
				"priority": "medium",
				"bug_severity": "medium",
				"depends_on": [
					"1051424",
					"1051425",
					"1051426",
					"1051427",
					"1102889",
					"1102890",
					"1102891",
					"1102892",
					"1102893",
					"1102894"
				],
				"blocked": [
					{
						"bug_id": "1051429",
						"error": "NotPermitted"
					}
				],
				"external_bugs": {
					"text": "RHSA-2014:0748",
					"name": "Red Hat Product Errata"
				},
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "6694234",
						"comment_count": "0",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 09:36:01 +0000",
						"thetext": "Jinja2, a template engine written in pure python, was found to use /tmp as a default directory for jinja2.bccache.FileSystemBytecodeCache, which is insecure because the /tmp directory is world-writable and the filenames used by FileSystemBytecodeCache are predictable. A malicious local user could exploit this bug to alter output generated by other user's application using Jinja2 or possibly, execute arbitrary code as another user.\n\nReferences:\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747"
					},
					{
						"isprivate": "0",
						"commentid": "6694256",
						"comment_count": "2",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 09:39:24 +0000",
						"thetext": "\nCreated python-jinja2 tracking bugs for this issue:\n\nAffects: fedora-all [bug 1051424]\nAffects: epel-all [bug 1051425]"
					},
					{
						"isprivate": "0",
						"commentid": "6694257",
						"comment_count": "3",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 09:39:29 +0000",
						"thetext": "\nCreated python26-jinja2 tracking bugs for this issue:\n\nAffects: epel-5 [bug 1051426]"
					},
					{
						"isprivate": "0",
						"commentid": "6694632",
						"comment_count": "5",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 11:42:49 +0000",
						"thetext": "CVE Request:\nhttp://seclists.org/oss-sec/2014/q1/71"
					},
					{
						"isprivate": "0",
						"commentid": "6697604",
						"comment_count": "8",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2014-01-11 20:38:50 +0000",
						"thetext": "The fix for this issue:\n\nhttps://github.com/mitsuhiko/jinja2/commit/acb672b6a179567632e032f547582f30fa2f4aa7"
					},
					{
						"isprivate": "0",
						"commentid": "6697613",
						"comment_count": "9",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2014-01-11 20:55:21 +0000",
						"thetext": "Note that Arun Babu Neelicattu reported [1] that the fix above introduced a new flaw (temporary file handling) which was assigned the CVE name CVE-2014-0012.\n\nI've also commented on the upstream commit to make the problem very clear.  So the above patch cannot be used as-is; it needs to be corrected for the temporary file flaw.\n\nAs it stands now, we are not vulnerable to CVE-2014-0012 as nothing has used this flawed patch.\n\n\n[1] http://seclists.org/oss-sec/2014/q1/73"
					},
					{
						"isprivate": "0",
						"commentid": "6697725",
						"comment_count": "10",
						"who": {
							"text": "thomas.moschny",
							"name": "Thomas Moschny"
						},
						"bug_when": "2014-01-12 01:45:59 +0000",
						"thetext": "(In reply to Vincent Danen from comment #9)\n> As it stands now, we are not vulnerable to CVE-2014-0012 as nothing has used\n> this flawed patch.\n\nWell, I've build 2.7.2 (which includes a variant of that patch) for Rawhide, which is thus currently affected by the (new) CVE-2014-0012.\n\nVersion 2.7.2 has also been built for F20, but given that it is flawed, I will not create an update. Instead, I'll wait for an updated version of the patch, or a new version.\n\nThe final patch can then be ported to the older versions for F19 (2.6), F18 (2.8) and EL5 (2.2.1 and 2.5.5)."
					},
					{
						"isprivate": "0",
						"commentid": "6702517",
						"comment_count": "11",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2014-01-13 15:43:37 +0000",
						"thetext": "I'm not too concerned about Rawhide.  That's a development version.  You're clearly aware of it, so I trust you'll ensure it's fixed there as well.\n\nProvided 2.7.2 for F20 hasn't been pushed to stable, I think we can safely say this doesn't affect F20.\n\nWaiting for a proper patch would be ideal, yes, although it probably wouldn't be too hard to just create one ourselves if upstream hasn't done so yet.\n\nThe only thing I can't tell by quickly looking is whether this cache directory needs to persist across invocations.  For instance, if it's supposed to survive from one run to the next then mkstemp is probably not the most appropriate way to go unless the location can be written to a config file for subsequent lookups.\n\nI'm not familiar with this code and don't have time to look at it closer right now, but I do see that upstream hasn't yet done anything in this regard yet.  Given the impact of the issue, I think it would be ok to take a \"wait and see\" approach, provided upstream doesn't take too long."
					},
					{
						"isprivate": "0",
						"commentid": "6706819",
						"comment_count": "12",
						"who": {
							"text": "thomas.moschny",
							"name": "Thomas Moschny"
						},
						"bug_when": "2014-01-14 12:43:34 +0000",
						"thetext": "(In reply to Vincent Danen from comment #11)\n> The only thing I can't tell by quickly looking is whether this cache\n> directory needs to persist across invocations.  For instance, if it's\n> supposed to survive from one run to the next then mkstemp is probably not\n> the most appropriate way to go unless the location can be written to a\n> config file for subsequent lookups.\n\nYes, the cache location needs to be persistent across invocations. Bugging upstream."
					},
					{
						"isprivate": "0",
						"commentid": "6710818",
						"comment_count": "13",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-15 08:11:07 +0000",
						"thetext": "(In reply to Thomas Moschny from comment #12)\n> (In reply to Vincent Danen from comment #11)\n> > The only thing I can't tell by quickly looking is whether this cache\n> > directory needs to persist across invocations.  For instance, if it's\n> > supposed to survive from one run to the next then mkstemp is probably not\n> > the most appropriate way to go unless the location can be written to a\n> > config file for subsequent lookups.\n> \n> Yes, the cache location needs to be persistent across invocations. Bugging\n> upstream.\n\nBut that means that the directory name has to predictable in some way, doesn't it? So the real question is, how can you make a temporary file that's both safe and its location is computable across interpreter invocations."
					},
					{
						"isprivate": "0",
						"commentid": "6722696",
						"comment_count": "14",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2014-01-17 18:14:15 +0000",
						"thetext": "There's a few things, and it's tough to do this correctly.  The problem, as I gather it, is you can have more than one user run this which is why they were using directories based on the uid.\n\nWhat would be ideal here, I think, is to have /var/run/jinja2/ created by the package and that would be the root directory (as opposed to /tmp).  Within this directory can be user-based sub-directorys (/var/run/jinja2/user or /var/run/jinga2/uid) and the code would look to a) see if it exists (if not, create with 0700 perms), and b) see if it is owned by the appropriate user (if not, complain really really loudly).\n\nThat's still not perfect, and there might still be a race condition there, but I don't think os.mkdir() will complete successfully if the named path exists as a directory or file, so should be ok).\n\nSo perhaps something like:\n\npath = '/var/run/jinja2/%s' % os.getuid()\ntry:\n    os.mkdir(path, 0700)\nexcept Exception as e:\n    raise e\n\nif os.stat(path).st_uid is not os.getuid():\n    # error and exit\n\nif oct(os.stat(path).st_mode & 0777) is not '0700':\n    # error and exit\n\nThat should work I think.\n\nThe other alternative is to again use /var/run/jinja2/ but use temp.mkstemp() to create a directory in there, but only if a config file or setting doesn't exist.  For instance, we have something like ~/.jinja2 or ~/.jinja2/config or whatever that has the setting:\n\npath = /var/run/jina2/532/tmp123456\n\nand then the module looks here first as the cache location (probably performing the same tests as above... \"is it owned by me?\" and \"is it mode 0700?\" before doing anything with it).\n\nIf such a config file/setting doesn't exist, create the file with temp.mkstemp() and write it to the config/setting for subsequent use.  If the noted file doesn't exist (or isn't usable due to failing any tests), create a new one with temp.mkstemp() and save the new path to the config file.\n\nThose seem to to be the two best options to me."
					},
					{
						"isprivate": "0",
						"commentid": "6726422",
						"comment_count": "15",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-20 08:12:29 +0000",
						"thetext": "(In reply to Vincent Danen from comment #14)\n> There's a few things, and it's tough to do this correctly.  The problem, as\n> I gather it, is you can have more than one user run this which is why they\n> were using directories based on the uid.\n> \n> What would be ideal here, I think, is to have /var/run/jinja2/ created by\n> the package and that would be the root directory (as opposed to /tmp). \n> Within this directory can be user-based sub-directorys (/var/run/jinja2/user\n> or /var/run/jinga2/uid) and the code would look to a) see if it exists (if\n> not, create with 0700 perms), and b) see if it is owned by the appropriate\n> user (if not, complain really really loudly).\n\nSo how is this different from doing the same in /tmp? I don't see why you'd need to move to /var/run/jinja2.\nBased on what you're saying, I guess the upstream patch is OK, but it needs the two checks you mention:\n\n> if os.stat(path).st_uid is not os.getuid():\n>     # error and exit\n> \n> if oct(os.stat(path).st_mode & 0777) is not '0700':\n>     # error and exit\n\nOr is there some problem doing this in /tmp that I don't see? Thanks."
					},
					{
						"isprivate": "0",
						"commentid": "6746855",
						"comment_count": "17",
						"who": {
							"text": "vdanen",
							"name": "Vincent Danen"
						},
						"bug_when": "2014-01-24 00:09:01 +0000",
						"thetext": "Persistence.  If the idea is to have the cache persist across invocations of jinja2, then I assume it might be desirable to have it persist across reboots as well.\n\nAs many systems clean /tmp on reboot, that would remove the cache as well.  In /var/run/jinja2/ there are no such problems.\n\nI also believe that cache files are not temporary files, necessarily, so I don't know if /tmp is the most appropriate.\n\nFunctionally it's the same thing, you're right.  The biggest thing for me is persistence."
					},
					{
						"isprivate": "0",
						"commentid": "6750445",
						"comment_count": "18",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-24 20:54:13 +0000",
						"thetext": "(In reply to Vincent Danen from comment #17)\n> Persistence.  If the idea is to have the cache persist across invocations of\n> jinja2, then I assume it might be desirable to have it persist across\n> reboots as well.\n> \n> As many systems clean /tmp on reboot, that would remove the cache as well. \n> In /var/run/jinja2/ there are no such problems.\n\nGiven that it's only cache meant to provide speed improvement, persistence across reboots may not be that important.  On the other hand, /var/run/jinja2/ would imply new unexpected world-writable directory for administrators to deal with.  There's a workaround to achieve better persistence by setting TMPDIR to point to a directory that isn't wiped on reboot.  I'd leave improving persistence out of scope of this security fix.  The same persistence issues existed before."
					},
					{
						"isprivate": "0",
						"commentid": "6755632",
						"comment_count": "19",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-27 15:31:37 +0000",
						"thetext": "(In reply to Vincent Danen from comment #14)\n> path = '/var/run/jinja2/%s' % os.getuid()\n> try:\n>     os.mkdir(path, 0700)\n> except Exception as e:\n>     raise e\n\nThis either needs a check for existence before mkdir (as you mentioned), or handle EEXIST error differently.\n\n> if os.stat(path).st_uid is not os.getuid():\n>     # error and exit\n> \n> if oct(os.stat(path).st_mode & 0777) is not '0700':\n>     # error and exit\n\nos.lstat needs to be used instead of os.stat to avoid symlink + race issues.\n\nHence something like:\n\ntry:\n    os.mkdir(path, 0700)\nexcept OSError as e:\n    if e.errno != errno.EEXIST:\n        raise\n    \npath_stat = os.lstat(path)\nif path_stat.st_uid != os.geteuid() \\\n    or not stat.S_ISDIR(path_stat.st_mode) \\\n    or (os.stat(path).st_mode & 0777) != 0700:\n    # raise some \"bad permissions\" exception\n\nPossibly with all stat checks within except."
					},
					{
						"isprivate": "0",
						"commentid": "6755765",
						"comment_count": "20",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-27 15:51:11 +0000",
						"thetext": "(In reply to Vincent Danen from comment #9)\n> Note that Arun Babu Neelicattu reported [1] that the fix above introduced a\n> new flaw (temporary file handling) which was assigned the CVE name\n> CVE-2014-0012.\n\nThe original issue falls into the \"insecure temporary file use\" category as well.  Both in terms of allowing file overwrite, and making jinja use a cache file from attacker.\n\nUpstream fix changes situation a little - attacker needs to be able to create /tmp/_jinja2-cache-$UID directory before victim, but if they succeed in doing so, they can unlink cache files created by victim at any time.\n\nThere is a separate bug for CVE-2014-0012 - bug 1052102 - albeit all the real discussion happens here."
					},
					{
						"isprivate": "0",
						"commentid": "6755924",
						"comment_count": "21",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-27 16:05:41 +0000",
						"thetext": "Created attachment 856133\nFix for CVE-2014-0012\n\n(In reply to Tomas Hoger from comment #18)\n> (In reply to Vincent Danen from comment #17)\n> > Persistence.  If the idea is to have the cache persist across invocations of\n> > jinja2, then I assume it might be desirable to have it persist across\n> > reboots as well.\n> > \n> > As many systems clean /tmp on reboot, that would remove the cache as well. \n> > In /var/run/jinja2/ there are no such problems.\n> \n> Given that it's only cache meant to provide speed improvement, persistence\n> across reboots may not be that important.  On the other hand,\n> /var/run/jinja2/ would imply new unexpected world-writable directory for\n> administrators to deal with.  There's a workaround to achieve better\n> persistence by setting TMPDIR to point to a directory that isn't wiped on\n> reboot.  I'd leave improving persistence out of scope of this security fix. \n> The same persistence issues existed before.\n\nAgreed. I'm attaching a patch that should fix the security problem - it checks for both dir ownership and proper permissions.\nTomas, Vincent, can anyone of you review the patch and confirm it's ok before I commit it to RHEL and submit upstream? Thanks!"
					},
					{
						"isprivate": "0",
						"commentid": "6755940",
						"comment_count": "22",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-27 16:09:00 +0000",
						"thetext": "Whoops, I accidentally assigned this to myself. Sorry, resetting."
					},
					{
						"isprivate": "0",
						"commentid": "6756144",
						"comment_count": "23",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-27 16:42:52 +0000",
						"thetext": "(In reply to Bohuslav \"Slavek\" Kabrda from comment #21)\n> Agreed. I'm attaching a patch that should fix the security problem - it\n> checks for both dir ownership and proper permissions.\n> Tomas, Vincent, can anyone of you review the patch and confirm it's ok\n> before I commit it to RHEL and submit upstream? Thanks!\n\n- Use os.lstat, not os.stat.  os.stat follows symlinks, so attacker can create link that points to some victim's directory with proper permission at the time of the check, and later replace with real directory, or symlink to an attacker's directory.\n\n- Consider checking if path actually is directory.\n\n(See comment 19 for the both of the above comments.)\n\n- Nitpick: use 0700 instead of 448.  448 is less obvious, are there significant benefits over 0700 to actually use it?  (I know upstream uses 448 elsewhere, so why not fix both while at it? :)\n\n- A concern with the $UID directories is that it possibly makes it somewhat easier to \"DoS\" other local user by making Jinja2 raise exception because of cache file permissions.  But the problem is not new, older Jinja2 versions could raise exception too if they found cache files they could not use."
					},
					{
						"isprivate": "0",
						"commentid": "6756583",
						"comment_count": "24",
						"who": {
							"text": "jwilk"
						},
						"bug_when": "2014-01-27 18:56:50 +0000",
						"thetext": "Jinja2 (>= 2.7) supports Python 2 and Python 3 with single codebase (no 2to3 involved). So upstream can't use 0700, because that's syntax error in Python 3. They could use 0o700 (which is syntactically valid since Python 2.6) or stat.S_IRWXU."
					},
					{
						"isprivate": "0",
						"commentid": "6756750",
						"comment_count": "25",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-27 19:48:39 +0000",
						"thetext": "Ok, thank you for the clarification!"
					},
					{
						"isprivate": "0",
						"commentid": "6758460",
						"comment_count": "27",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-28 09:35:15 +0000",
						"thetext": "(In reply to Tomas Hoger from comment #23)\n> (In reply to Bohuslav \"Slavek\" Kabrda from comment #21)\n> > Agreed. I'm attaching a patch that should fix the security problem - it\n> > checks for both dir ownership and proper permissions.\n> > Tomas, Vincent, can anyone of you review the patch and confirm it's ok\n> > before I commit it to RHEL and submit upstream? Thanks!\n> \n> - Use os.lstat, not os.stat.  os.stat follows symlinks, so attacker can\n> create link that points to some victim's directory with proper permission at\n> the time of the check, and later replace with real directory, or symlink to\n> an attacker's directory.\n\nOk, will do.\n\n> - Consider checking if path actually is directory.\n\nI don't understand why that'd be needed. If the path is not a directory then there are two possibilities:\n- It's owned by the user that jinja2 is running under - then Python will just fail when trying to create a file in this directory (which is actually not a directory).\n- It's owned by another user - the check for owner will rise exception before any attempt to create a cached file.\nWhat do we gain by checking that the path is directory?\n \n> - Nitpick: use 0700 instead of 448.  448 is less obvious, are there\n> significant benefits over 0700 to actually use it?  (I know upstream uses\n> 448 elsewhere, so why not fix both while at it? :)\n\nBecause I want to have a patch acceptable for upstream. If upstream is keen on using 448, then that's what I want to do to keep consistent and to have an acceptable patch (also it's better because of the reason mentioned in comment #24 by Jakub Wilk).\n\n> - A concern with the $UID directories is that it possibly makes it somewhat\n> easier to \"DoS\" other local user by making Jinja2 raise exception because of\n> cache file permissions.  But the problem is not new, older Jinja2 versions\n> could raise exception too if they found cache files they could not use.\n\nYes, the problem is old and I don't think that fixing it is in the scope of this bug.\n\n\nSo to sum up, I think that the only alteration needed for my patch is using \"lstat\" instead of \"stat\". Is that correct?\nThanks a lot!"
					},
					{
						"isprivate": "0",
						"commentid": "6758591",
						"comment_count": "28",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-28 10:28:00 +0000",
						"thetext": "(In reply to Bohuslav \"Slavek\" Kabrda from comment #27)\n> > - Consider checking if path actually is directory.\n> \n> I don't understand why that'd be needed. If the path is not a directory then\n> there are two possibilities:\n> - It's owned by the user that jinja2 is running under - then Python will\n> just fail when trying to create a file in this directory (which is actually\n> not a directory).\n> - It's owned by another user - the check for owner will rise exception\n> before any attempt to create a cached file.\n> What do we gain by checking that the path is directory?\n\nI have no specific significant concern in mind.  The check can lead to better error report.  There should be no negative impact, if re-stat is avoided."
					},
					{
						"isprivate": "0",
						"commentid": "6758635",
						"comment_count": "29",
						"who": {
							"text": "bkabrda",
							"name": "Bohuslav \"Slavek\" Kabrda"
						},
						"bug_when": "2014-01-28 10:39:13 +0000",
						"thetext": "Created attachment 856466\nFix for CVE-2014-0012 that uses lstat instead of stat\n\nOk, so I hope that [attached] is the final and correct patch for the CVE. I just replaced os.stat with os.lstat, no other change since the last patch."
					},
					{
						"isprivate": "0",
						"commentid": "6759191",
						"comment_count": "30",
						"who": {
							"text": "jwilk"
						},
						"bug_when": "2014-01-28 13:10:46 +0000",
						"thetext": "The \"is it a directory?\" check is important, because we don't want to follow symlinks. Just because such a symlink is owned by the correct user, doesn't mean it was created by this user: it could have been hardlinked by an attacker.\n\nNow, on Linux systems we are safe, because symlinks have always 0777 permissions, so they never pass the st_mode check. But it's not neccessarily the case on other systems."
					},
					{
						"isprivate": "0",
						"commentid": "6763284",
						"comment_count": "31",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-01-29 11:47:19 +0000",
						"thetext": "Slavek, are you working on submitting pull request upstream?"
					},
					{
						"isprivate": "0",
						"commentid": "6840970",
						"comment_count": "32",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-02-20 20:34:21 +0000",
						"thetext": "I did a pull request with a fix that adds ownership, permission and type check for the temporary directory:\n\nhttps://github.com/mitsuhiko/jinja2/pull/296"
					},
					{
						"isprivate": "0",
						"commentid": "6976510",
						"comment_count": "33",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-04-02 09:08:19 +0000",
						"thetext": "There's still no upstream feedback on additional fixes required to fix this issue, and no upstream commits since early Jan.  It seems we should proceed with our own fix without upstream."
					},
					{
						"isprivate": "0",
						"commentid": "7130807",
						"comment_count": "34",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-05-29 18:51:27 +0000",
						"thetext": "Still no real activity upstream."
					},
					{
						"isprivate": "0",
						"commentid": "7155811",
						"comment_count": "38",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-06-06 21:55:35 +0000",
						"thetext": "(In reply to Tomas Hoger from comment #32)\n> I did a pull request with a fix that adds ownership, permission and type\n> check for the temporary directory:\n> \n> https://github.com/mitsuhiko/jinja2/pull/296\n\nApplied upstream:\n\nhttps://github.com/mitsuhiko/jinja2/commit/964c61ce79f6748ff8c583e2eb12ec54082bf188\n\nFixed in version 2.7.3."
					},
					{
						"isprivate": "0",
						"commentid": "7156027",
						"comment_count": "39",
						"who": {
							"text": "thomas.moschny",
							"name": "Thomas Moschny"
						},
						"bug_when": "2014-06-07 09:02:39 +0000",
						"thetext": "I've updated rawhide to 2.7.3, and a build for F20 is underway.\n\nWe need to port the final patch to 2.6 (for F19 and RHEL7) and to 2.2.1 (for EPEL5 and RHEL6). Is someone from RH already working on this?"
					},
					{
						"isprivate": "0",
						"commentid": "7174918",
						"comment_count": "41",
						"who": {
							"text": "errata-xmlrpc",
							"name": "errata-xmlrpc"
						},
						"bug_when": "2014-06-11 17:13:42 +0000",
						"thetext": "This issue has been addressed in following products:\n\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6.3 EUS\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6.4 EUS\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 7\n\nVia RHSA-2014:0748 https://rhn.redhat.com/errata/RHSA-2014-0748.html"
					},
					{
						"isprivate": "0",
						"commentid": "7174924",
						"comment_count": "42",
						"who": {
							"text": "errata-xmlrpc",
							"name": "errata-xmlrpc"
						},
						"bug_when": "2014-06-11 17:14:30 +0000",
						"thetext": "This issue has been addressed in following products:\n\n  Red Hat Enterprise Linux 6\n\nVia RHSA-2014:0747 https://rhn.redhat.com/errata/RHSA-2014-0747.html"
					},
					{
						"isprivate": "0",
						"commentid": "7179834",
						"comment_count": "43",
						"who": {
							"text": "thomas.moschny",
							"name": "Thomas Moschny"
						},
						"bug_when": "2014-06-12 19:26:16 +0000",
						"thetext": "I guess it's ok for me to take the patches from these packages mentioned in comment 41 and comment 42 and apply them to the F19 and EPEL5 packages, respectively?"
					},
					{
						"isprivate": "0",
						"commentid": "7179916",
						"comment_count": "44",
						"who": {
							"text": "thoger",
							"name": "Tomas Hoger"
						},
						"bug_when": "2014-06-12 19:41:57 +0000",
						"thetext": "Right, they are backports of upstream fix, feel free to use."
					},
					{
						"isprivate": "0",
						"commentid": "7192660",
						"comment_count": "45",
						"who": {
							"text": "thomas.moschny",
							"name": "Thomas Moschny"
						},
						"bug_when": "2014-06-14 01:13:20 +0000",
						"thetext": "There's no tracking bug for python-jinja2-26, I've used bug 1051425 for that."
					},
					{
						"isprivate": "0",
						"commentid": "7225899",
						"comment_count": "46",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-22 23:56:23 +0000",
						"thetext": "python-jinja2-2.6-7.fc19 has been pushed to the Fedora 19 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7225909",
						"comment_count": "47",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-22 23:57:30 +0000",
						"thetext": "python-jinja2-2.7.3-1.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7247772",
						"comment_count": "49",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-30 03:37:53 +0000",
						"thetext": "python26-jinja2-2.5.5-5.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7247776",
						"comment_count": "50",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-30 03:38:21 +0000",
						"thetext": "python-jinja2-26-2.6-3.el6 has been pushed to the Fedora EPEL 6 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7247779",
						"comment_count": "51",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-30 03:38:41 +0000",
						"thetext": "python-jinja2-2.2.1-2.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
					}
				]
			}
		},
		{
			"bug_id": 1051425,
			"security": true,
			"title": "python-jinja2: arbitrary code execution vulnerability [epel-all]",
			"bugzilla": {
				"bug_id": "1051425",
				"creation_ts": "2014-01-10 09:38:22 +0000",
				"short_desc": "python-jinja2: arbitrary code execution vulnerability [epel-all]",
				"delta_ts": "2016-09-20 02:45:41 +0000",
				"bug_status": "CLOSED",
				"resolution": "ERRATA",
				"keywords": "Security, SecurityTracking",
				"priority": "medium",
				"bug_severity": "medium",
				"blocked": [
					{
						"bug_id": "1051421",
						"alias": "CVE-2014-1402",
						"creation_ts": "2014-01-10 09:36:01 +0000",
						"short_desc": "CVE-2014-1402 python-jinja2: FileSystemBytecodeCache insecure cache temporary file use",
						"delta_ts": "2021-02-17 07:00:51 +0000",
						"bug_status": "CLOSED",
						"resolution": "ERRATA",
						"keywords": "Reopened, Security",
						"priority": "medium",
						"bug_severity": "medium",
						"depends_on": [
							"1051424",
							"1051425",
							"1051426",
							"1051427",
							"1102889",
							"1102890",
							"1102891",
							"1102892",
							"1102893",
							"1102894"
						],
						"blocked": [
							{
								"bug_id": "1051429",
								"error": "NotPermitted"
							}
						],
						"external_bugs": {
							"text": "RHSA-2014:0748",
							"name": "Red Hat Product Errata"
						},
						"long_desc": [
							{
								"isprivate": "0",
								"commentid": "6694234",
								"comment_count": "0",
								"who": {
									"text": "ratulg",
									"name": "Ratul Gupta"
								},
								"bug_when": "2014-01-10 09:36:01 +0000",
								"thetext": "Jinja2, a template engine written in pure python, was found to use /tmp as a default directory for jinja2.bccache.FileSystemBytecodeCache, which is insecure because the /tmp directory is world-writable and the filenames used by FileSystemBytecodeCache are predictable. A malicious local user could exploit this bug to alter output generated by other user's application using Jinja2 or possibly, execute arbitrary code as another user.\n\nReferences:\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747"
							},
							{
								"isprivate": "0",
								"commentid": "6694256",
								"comment_count": "2",
								"who": {
									"text": "ratulg",
									"name": "Ratul Gupta"
								},
								"bug_when": "2014-01-10 09:39:24 +0000",
								"thetext": "\nCreated python-jinja2 tracking bugs for this issue:\n\nAffects: fedora-all [bug 1051424]\nAffects: epel-all [bug 1051425]"
							},
							{
								"isprivate": "0",
								"commentid": "6694257",
								"comment_count": "3",
								"who": {
									"text": "ratulg",
									"name": "Ratul Gupta"
								},
								"bug_when": "2014-01-10 09:39:29 +0000",
								"thetext": "\nCreated python26-jinja2 tracking bugs for this issue:\n\nAffects: epel-5 [bug 1051426]"
							},
							{
								"isprivate": "0",
								"commentid": "6694632",
								"comment_count": "5",
								"who": {
									"text": "ratulg",
									"name": "Ratul Gupta"
								},
								"bug_when": "2014-01-10 11:42:49 +0000",
								"thetext": "CVE Request:\nhttp://seclists.org/oss-sec/2014/q1/71"
							},
							{
								"isprivate": "0",
								"commentid": "6697604",
								"comment_count": "8",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2014-01-11 20:38:50 +0000",
								"thetext": "The fix for this issue:\n\nhttps://github.com/mitsuhiko/jinja2/commit/acb672b6a179567632e032f547582f30fa2f4aa7"
							},
							{
								"isprivate": "0",
								"commentid": "6697613",
								"comment_count": "9",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2014-01-11 20:55:21 +0000",
								"thetext": "Note that Arun Babu Neelicattu reported [1] that the fix above introduced a new flaw (temporary file handling) which was assigned the CVE name CVE-2014-0012.\n\nI've also commented on the upstream commit to make the problem very clear.  So the above patch cannot be used as-is; it needs to be corrected for the temporary file flaw.\n\nAs it stands now, we are not vulnerable to CVE-2014-0012 as nothing has used this flawed patch.\n\n\n[1] http://seclists.org/oss-sec/2014/q1/73"
							},
							{
								"isprivate": "0",
								"commentid": "6697725",
								"comment_count": "10",
								"who": {
									"text": "thomas.moschny",
									"name": "Thomas Moschny"
								},
								"bug_when": "2014-01-12 01:45:59 +0000",
								"thetext": "(In reply to Vincent Danen from comment #9)\n> As it stands now, we are not vulnerable to CVE-2014-0012 as nothing has used\n> this flawed patch.\n\nWell, I've build 2.7.2 (which includes a variant of that patch) for Rawhide, which is thus currently affected by the (new) CVE-2014-0012.\n\nVersion 2.7.2 has also been built for F20, but given that it is flawed, I will not create an update. Instead, I'll wait for an updated version of the patch, or a new version.\n\nThe final patch can then be ported to the older versions for F19 (2.6), F18 (2.8) and EL5 (2.2.1 and 2.5.5)."
							},
							{
								"isprivate": "0",
								"commentid": "6702517",
								"comment_count": "11",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2014-01-13 15:43:37 +0000",
								"thetext": "I'm not too concerned about Rawhide.  That's a development version.  You're clearly aware of it, so I trust you'll ensure it's fixed there as well.\n\nProvided 2.7.2 for F20 hasn't been pushed to stable, I think we can safely say this doesn't affect F20.\n\nWaiting for a proper patch would be ideal, yes, although it probably wouldn't be too hard to just create one ourselves if upstream hasn't done so yet.\n\nThe only thing I can't tell by quickly looking is whether this cache directory needs to persist across invocations.  For instance, if it's supposed to survive from one run to the next then mkstemp is probably not the most appropriate way to go unless the location can be written to a config file for subsequent lookups.\n\nI'm not familiar with this code and don't have time to look at it closer right now, but I do see that upstream hasn't yet done anything in this regard yet.  Given the impact of the issue, I think it would be ok to take a \"wait and see\" approach, provided upstream doesn't take too long."
							},
							{
								"isprivate": "0",
								"commentid": "6706819",
								"comment_count": "12",
								"who": {
									"text": "thomas.moschny",
									"name": "Thomas Moschny"
								},
								"bug_when": "2014-01-14 12:43:34 +0000",
								"thetext": "(In reply to Vincent Danen from comment #11)\n> The only thing I can't tell by quickly looking is whether this cache\n> directory needs to persist across invocations.  For instance, if it's\n> supposed to survive from one run to the next then mkstemp is probably not\n> the most appropriate way to go unless the location can be written to a\n> config file for subsequent lookups.\n\nYes, the cache location needs to be persistent across invocations. Bugging upstream."
							},
							{
								"isprivate": "0",
								"commentid": "6710818",
								"comment_count": "13",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-15 08:11:07 +0000",
								"thetext": "(In reply to Thomas Moschny from comment #12)\n> (In reply to Vincent Danen from comment #11)\n> > The only thing I can't tell by quickly looking is whether this cache\n> > directory needs to persist across invocations.  For instance, if it's\n> > supposed to survive from one run to the next then mkstemp is probably not\n> > the most appropriate way to go unless the location can be written to a\n> > config file for subsequent lookups.\n> \n> Yes, the cache location needs to be persistent across invocations. Bugging\n> upstream.\n\nBut that means that the directory name has to predictable in some way, doesn't it? So the real question is, how can you make a temporary file that's both safe and its location is computable across interpreter invocations."
							},
							{
								"isprivate": "0",
								"commentid": "6722696",
								"comment_count": "14",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2014-01-17 18:14:15 +0000",
								"thetext": "There's a few things, and it's tough to do this correctly.  The problem, as I gather it, is you can have more than one user run this which is why they were using directories based on the uid.\n\nWhat would be ideal here, I think, is to have /var/run/jinja2/ created by the package and that would be the root directory (as opposed to /tmp).  Within this directory can be user-based sub-directorys (/var/run/jinja2/user or /var/run/jinga2/uid) and the code would look to a) see if it exists (if not, create with 0700 perms), and b) see if it is owned by the appropriate user (if not, complain really really loudly).\n\nThat's still not perfect, and there might still be a race condition there, but I don't think os.mkdir() will complete successfully if the named path exists as a directory or file, so should be ok).\n\nSo perhaps something like:\n\npath = '/var/run/jinja2/%s' % os.getuid()\ntry:\n    os.mkdir(path, 0700)\nexcept Exception as e:\n    raise e\n\nif os.stat(path).st_uid is not os.getuid():\n    # error and exit\n\nif oct(os.stat(path).st_mode & 0777) is not '0700':\n    # error and exit\n\nThat should work I think.\n\nThe other alternative is to again use /var/run/jinja2/ but use temp.mkstemp() to create a directory in there, but only if a config file or setting doesn't exist.  For instance, we have something like ~/.jinja2 or ~/.jinja2/config or whatever that has the setting:\n\npath = /var/run/jina2/532/tmp123456\n\nand then the module looks here first as the cache location (probably performing the same tests as above... \"is it owned by me?\" and \"is it mode 0700?\" before doing anything with it).\n\nIf such a config file/setting doesn't exist, create the file with temp.mkstemp() and write it to the config/setting for subsequent use.  If the noted file doesn't exist (or isn't usable due to failing any tests), create a new one with temp.mkstemp() and save the new path to the config file.\n\nThose seem to to be the two best options to me."
							},
							{
								"isprivate": "0",
								"commentid": "6726422",
								"comment_count": "15",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-20 08:12:29 +0000",
								"thetext": "(In reply to Vincent Danen from comment #14)\n> There's a few things, and it's tough to do this correctly.  The problem, as\n> I gather it, is you can have more than one user run this which is why they\n> were using directories based on the uid.\n> \n> What would be ideal here, I think, is to have /var/run/jinja2/ created by\n> the package and that would be the root directory (as opposed to /tmp). \n> Within this directory can be user-based sub-directorys (/var/run/jinja2/user\n> or /var/run/jinga2/uid) and the code would look to a) see if it exists (if\n> not, create with 0700 perms), and b) see if it is owned by the appropriate\n> user (if not, complain really really loudly).\n\nSo how is this different from doing the same in /tmp? I don't see why you'd need to move to /var/run/jinja2.\nBased on what you're saying, I guess the upstream patch is OK, but it needs the two checks you mention:\n\n> if os.stat(path).st_uid is not os.getuid():\n>     # error and exit\n> \n> if oct(os.stat(path).st_mode & 0777) is not '0700':\n>     # error and exit\n\nOr is there some problem doing this in /tmp that I don't see? Thanks."
							},
							{
								"isprivate": "0",
								"commentid": "6746855",
								"comment_count": "17",
								"who": {
									"text": "vdanen",
									"name": "Vincent Danen"
								},
								"bug_when": "2014-01-24 00:09:01 +0000",
								"thetext": "Persistence.  If the idea is to have the cache persist across invocations of jinja2, then I assume it might be desirable to have it persist across reboots as well.\n\nAs many systems clean /tmp on reboot, that would remove the cache as well.  In /var/run/jinja2/ there are no such problems.\n\nI also believe that cache files are not temporary files, necessarily, so I don't know if /tmp is the most appropriate.\n\nFunctionally it's the same thing, you're right.  The biggest thing for me is persistence."
							},
							{
								"isprivate": "0",
								"commentid": "6750445",
								"comment_count": "18",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-24 20:54:13 +0000",
								"thetext": "(In reply to Vincent Danen from comment #17)\n> Persistence.  If the idea is to have the cache persist across invocations of\n> jinja2, then I assume it might be desirable to have it persist across\n> reboots as well.\n> \n> As many systems clean /tmp on reboot, that would remove the cache as well. \n> In /var/run/jinja2/ there are no such problems.\n\nGiven that it's only cache meant to provide speed improvement, persistence across reboots may not be that important.  On the other hand, /var/run/jinja2/ would imply new unexpected world-writable directory for administrators to deal with.  There's a workaround to achieve better persistence by setting TMPDIR to point to a directory that isn't wiped on reboot.  I'd leave improving persistence out of scope of this security fix.  The same persistence issues existed before."
							},
							{
								"isprivate": "0",
								"commentid": "6755632",
								"comment_count": "19",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-27 15:31:37 +0000",
								"thetext": "(In reply to Vincent Danen from comment #14)\n> path = '/var/run/jinja2/%s' % os.getuid()\n> try:\n>     os.mkdir(path, 0700)\n> except Exception as e:\n>     raise e\n\nThis either needs a check for existence before mkdir (as you mentioned), or handle EEXIST error differently.\n\n> if os.stat(path).st_uid is not os.getuid():\n>     # error and exit\n> \n> if oct(os.stat(path).st_mode & 0777) is not '0700':\n>     # error and exit\n\nos.lstat needs to be used instead of os.stat to avoid symlink + race issues.\n\nHence something like:\n\ntry:\n    os.mkdir(path, 0700)\nexcept OSError as e:\n    if e.errno != errno.EEXIST:\n        raise\n    \npath_stat = os.lstat(path)\nif path_stat.st_uid != os.geteuid() \\\n    or not stat.S_ISDIR(path_stat.st_mode) \\\n    or (os.stat(path).st_mode & 0777) != 0700:\n    # raise some \"bad permissions\" exception\n\nPossibly with all stat checks within except."
							},
							{
								"isprivate": "0",
								"commentid": "6755765",
								"comment_count": "20",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-27 15:51:11 +0000",
								"thetext": "(In reply to Vincent Danen from comment #9)\n> Note that Arun Babu Neelicattu reported [1] that the fix above introduced a\n> new flaw (temporary file handling) which was assigned the CVE name\n> CVE-2014-0012.\n\nThe original issue falls into the \"insecure temporary file use\" category as well.  Both in terms of allowing file overwrite, and making jinja use a cache file from attacker.\n\nUpstream fix changes situation a little - attacker needs to be able to create /tmp/_jinja2-cache-$UID directory before victim, but if they succeed in doing so, they can unlink cache files created by victim at any time.\n\nThere is a separate bug for CVE-2014-0012 - bug 1052102 - albeit all the real discussion happens here."
							},
							{
								"isprivate": "0",
								"commentid": "6755924",
								"comment_count": "21",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-27 16:05:41 +0000",
								"thetext": "Created attachment 856133\nFix for CVE-2014-0012\n\n(In reply to Tomas Hoger from comment #18)\n> (In reply to Vincent Danen from comment #17)\n> > Persistence.  If the idea is to have the cache persist across invocations of\n> > jinja2, then I assume it might be desirable to have it persist across\n> > reboots as well.\n> > \n> > As many systems clean /tmp on reboot, that would remove the cache as well. \n> > In /var/run/jinja2/ there are no such problems.\n> \n> Given that it's only cache meant to provide speed improvement, persistence\n> across reboots may not be that important.  On the other hand,\n> /var/run/jinja2/ would imply new unexpected world-writable directory for\n> administrators to deal with.  There's a workaround to achieve better\n> persistence by setting TMPDIR to point to a directory that isn't wiped on\n> reboot.  I'd leave improving persistence out of scope of this security fix. \n> The same persistence issues existed before.\n\nAgreed. I'm attaching a patch that should fix the security problem - it checks for both dir ownership and proper permissions.\nTomas, Vincent, can anyone of you review the patch and confirm it's ok before I commit it to RHEL and submit upstream? Thanks!"
							},
							{
								"isprivate": "0",
								"commentid": "6755940",
								"comment_count": "22",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-27 16:09:00 +0000",
								"thetext": "Whoops, I accidentally assigned this to myself. Sorry, resetting."
							},
							{
								"isprivate": "0",
								"commentid": "6756144",
								"comment_count": "23",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-27 16:42:52 +0000",
								"thetext": "(In reply to Bohuslav \"Slavek\" Kabrda from comment #21)\n> Agreed. I'm attaching a patch that should fix the security problem - it\n> checks for both dir ownership and proper permissions.\n> Tomas, Vincent, can anyone of you review the patch and confirm it's ok\n> before I commit it to RHEL and submit upstream? Thanks!\n\n- Use os.lstat, not os.stat.  os.stat follows symlinks, so attacker can create link that points to some victim's directory with proper permission at the time of the check, and later replace with real directory, or symlink to an attacker's directory.\n\n- Consider checking if path actually is directory.\n\n(See comment 19 for the both of the above comments.)\n\n- Nitpick: use 0700 instead of 448.  448 is less obvious, are there significant benefits over 0700 to actually use it?  (I know upstream uses 448 elsewhere, so why not fix both while at it? :)\n\n- A concern with the $UID directories is that it possibly makes it somewhat easier to \"DoS\" other local user by making Jinja2 raise exception because of cache file permissions.  But the problem is not new, older Jinja2 versions could raise exception too if they found cache files they could not use."
							},
							{
								"isprivate": "0",
								"commentid": "6756583",
								"comment_count": "24",
								"who": {
									"text": "jwilk"
								},
								"bug_when": "2014-01-27 18:56:50 +0000",
								"thetext": "Jinja2 (>= 2.7) supports Python 2 and Python 3 with single codebase (no 2to3 involved). So upstream can't use 0700, because that's syntax error in Python 3. They could use 0o700 (which is syntactically valid since Python 2.6) or stat.S_IRWXU."
							},
							{
								"isprivate": "0",
								"commentid": "6756750",
								"comment_count": "25",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-27 19:48:39 +0000",
								"thetext": "Ok, thank you for the clarification!"
							},
							{
								"isprivate": "0",
								"commentid": "6758460",
								"comment_count": "27",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-28 09:35:15 +0000",
								"thetext": "(In reply to Tomas Hoger from comment #23)\n> (In reply to Bohuslav \"Slavek\" Kabrda from comment #21)\n> > Agreed. I'm attaching a patch that should fix the security problem - it\n> > checks for both dir ownership and proper permissions.\n> > Tomas, Vincent, can anyone of you review the patch and confirm it's ok\n> > before I commit it to RHEL and submit upstream? Thanks!\n> \n> - Use os.lstat, not os.stat.  os.stat follows symlinks, so attacker can\n> create link that points to some victim's directory with proper permission at\n> the time of the check, and later replace with real directory, or symlink to\n> an attacker's directory.\n\nOk, will do.\n\n> - Consider checking if path actually is directory.\n\nI don't understand why that'd be needed. If the path is not a directory then there are two possibilities:\n- It's owned by the user that jinja2 is running under - then Python will just fail when trying to create a file in this directory (which is actually not a directory).\n- It's owned by another user - the check for owner will rise exception before any attempt to create a cached file.\nWhat do we gain by checking that the path is directory?\n \n> - Nitpick: use 0700 instead of 448.  448 is less obvious, are there\n> significant benefits over 0700 to actually use it?  (I know upstream uses\n> 448 elsewhere, so why not fix both while at it? :)\n\nBecause I want to have a patch acceptable for upstream. If upstream is keen on using 448, then that's what I want to do to keep consistent and to have an acceptable patch (also it's better because of the reason mentioned in comment #24 by Jakub Wilk).\n\n> - A concern with the $UID directories is that it possibly makes it somewhat\n> easier to \"DoS\" other local user by making Jinja2 raise exception because of\n> cache file permissions.  But the problem is not new, older Jinja2 versions\n> could raise exception too if they found cache files they could not use.\n\nYes, the problem is old and I don't think that fixing it is in the scope of this bug.\n\n\nSo to sum up, I think that the only alteration needed for my patch is using \"lstat\" instead of \"stat\". Is that correct?\nThanks a lot!"
							},
							{
								"isprivate": "0",
								"commentid": "6758591",
								"comment_count": "28",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-28 10:28:00 +0000",
								"thetext": "(In reply to Bohuslav \"Slavek\" Kabrda from comment #27)\n> > - Consider checking if path actually is directory.\n> \n> I don't understand why that'd be needed. If the path is not a directory then\n> there are two possibilities:\n> - It's owned by the user that jinja2 is running under - then Python will\n> just fail when trying to create a file in this directory (which is actually\n> not a directory).\n> - It's owned by another user - the check for owner will rise exception\n> before any attempt to create a cached file.\n> What do we gain by checking that the path is directory?\n\nI have no specific significant concern in mind.  The check can lead to better error report.  There should be no negative impact, if re-stat is avoided."
							},
							{
								"isprivate": "0",
								"commentid": "6758635",
								"comment_count": "29",
								"who": {
									"text": "bkabrda",
									"name": "Bohuslav \"Slavek\" Kabrda"
								},
								"bug_when": "2014-01-28 10:39:13 +0000",
								"thetext": "Created attachment 856466\nFix for CVE-2014-0012 that uses lstat instead of stat\n\nOk, so I hope that [attached] is the final and correct patch for the CVE. I just replaced os.stat with os.lstat, no other change since the last patch."
							},
							{
								"isprivate": "0",
								"commentid": "6759191",
								"comment_count": "30",
								"who": {
									"text": "jwilk"
								},
								"bug_when": "2014-01-28 13:10:46 +0000",
								"thetext": "The \"is it a directory?\" check is important, because we don't want to follow symlinks. Just because such a symlink is owned by the correct user, doesn't mean it was created by this user: it could have been hardlinked by an attacker.\n\nNow, on Linux systems we are safe, because symlinks have always 0777 permissions, so they never pass the st_mode check. But it's not neccessarily the case on other systems."
							},
							{
								"isprivate": "0",
								"commentid": "6763284",
								"comment_count": "31",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-01-29 11:47:19 +0000",
								"thetext": "Slavek, are you working on submitting pull request upstream?"
							},
							{
								"isprivate": "0",
								"commentid": "6840970",
								"comment_count": "32",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-02-20 20:34:21 +0000",
								"thetext": "I did a pull request with a fix that adds ownership, permission and type check for the temporary directory:\n\nhttps://github.com/mitsuhiko/jinja2/pull/296"
							},
							{
								"isprivate": "0",
								"commentid": "6976510",
								"comment_count": "33",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-04-02 09:08:19 +0000",
								"thetext": "There's still no upstream feedback on additional fixes required to fix this issue, and no upstream commits since early Jan.  It seems we should proceed with our own fix without upstream."
							},
							{
								"isprivate": "0",
								"commentid": "7130807",
								"comment_count": "34",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-05-29 18:51:27 +0000",
								"thetext": "Still no real activity upstream."
							},
							{
								"isprivate": "0",
								"commentid": "7155811",
								"comment_count": "38",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-06-06 21:55:35 +0000",
								"thetext": "(In reply to Tomas Hoger from comment #32)\n> I did a pull request with a fix that adds ownership, permission and type\n> check for the temporary directory:\n> \n> https://github.com/mitsuhiko/jinja2/pull/296\n\nApplied upstream:\n\nhttps://github.com/mitsuhiko/jinja2/commit/964c61ce79f6748ff8c583e2eb12ec54082bf188\n\nFixed in version 2.7.3."
							},
							{
								"isprivate": "0",
								"commentid": "7156027",
								"comment_count": "39",
								"who": {
									"text": "thomas.moschny",
									"name": "Thomas Moschny"
								},
								"bug_when": "2014-06-07 09:02:39 +0000",
								"thetext": "I've updated rawhide to 2.7.3, and a build for F20 is underway.\n\nWe need to port the final patch to 2.6 (for F19 and RHEL7) and to 2.2.1 (for EPEL5 and RHEL6). Is someone from RH already working on this?"
							},
							{
								"isprivate": "0",
								"commentid": "7174918",
								"comment_count": "41",
								"who": {
									"text": "errata-xmlrpc",
									"name": "errata-xmlrpc"
								},
								"bug_when": "2014-06-11 17:13:42 +0000",
								"thetext": "This issue has been addressed in following products:\n\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6.3 EUS\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 6.4 EUS\n  Red Hat Software Collections 1 for Red Hat Enterprise Linux 7\n\nVia RHSA-2014:0748 https://rhn.redhat.com/errata/RHSA-2014-0748.html"
							},
							{
								"isprivate": "0",
								"commentid": "7174924",
								"comment_count": "42",
								"who": {
									"text": "errata-xmlrpc",
									"name": "errata-xmlrpc"
								},
								"bug_when": "2014-06-11 17:14:30 +0000",
								"thetext": "This issue has been addressed in following products:\n\n  Red Hat Enterprise Linux 6\n\nVia RHSA-2014:0747 https://rhn.redhat.com/errata/RHSA-2014-0747.html"
							},
							{
								"isprivate": "0",
								"commentid": "7179834",
								"comment_count": "43",
								"who": {
									"text": "thomas.moschny",
									"name": "Thomas Moschny"
								},
								"bug_when": "2014-06-12 19:26:16 +0000",
								"thetext": "I guess it's ok for me to take the patches from these packages mentioned in comment 41 and comment 42 and apply them to the F19 and EPEL5 packages, respectively?"
							},
							{
								"isprivate": "0",
								"commentid": "7179916",
								"comment_count": "44",
								"who": {
									"text": "thoger",
									"name": "Tomas Hoger"
								},
								"bug_when": "2014-06-12 19:41:57 +0000",
								"thetext": "Right, they are backports of upstream fix, feel free to use."
							},
							{
								"isprivate": "0",
								"commentid": "7192660",
								"comment_count": "45",
								"who": {
									"text": "thomas.moschny",
									"name": "Thomas Moschny"
								},
								"bug_when": "2014-06-14 01:13:20 +0000",
								"thetext": "There's no tracking bug for python-jinja2-26, I've used bug 1051425 for that."
							},
							{
								"isprivate": "0",
								"commentid": "7225899",
								"comment_count": "46",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-06-22 23:56:23 +0000",
								"thetext": "python-jinja2-2.6-7.fc19 has been pushed to the Fedora 19 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "7225909",
								"comment_count": "47",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-06-22 23:57:30 +0000",
								"thetext": "python-jinja2-2.7.3-1.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "7247772",
								"comment_count": "49",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-06-30 03:37:53 +0000",
								"thetext": "python26-jinja2-2.5.5-5.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "7247776",
								"comment_count": "50",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-06-30 03:38:21 +0000",
								"thetext": "python-jinja2-26-2.6-3.el6 has been pushed to the Fedora EPEL 6 stable repository.  If problems still persist, please make note of it in this bug report."
							},
							{
								"isprivate": "0",
								"commentid": "7247779",
								"comment_count": "51",
								"who": {
									"text": "updates",
									"name": "Fedora Update System"
								},
								"bug_when": "2014-06-30 03:38:41 +0000",
								"thetext": "python-jinja2-2.2.1-2.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
							}
						]
					}
				],
				"long_desc": [
					{
						"isprivate": "0",
						"commentid": "6694249",
						"comment_count": "0",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 09:38:22 +0000",
						"thetext": "\nThis is an automatically created tracking bug!  It was created to ensure\nthat one or more security vulnerabilities are fixed in affected versions\nof Fedora EPEL.\n\nFor comments that are specific to the vulnerability please use bugs filed\nagainst the \"Security Response\" product referenced in the \"Blocks\" field.\n\nFor more information see:\nhttp://fedoraproject.org/wiki/Security/TrackingBugs\n\nWhen creating a Bodhi update request, please use the bodhi submission link\nnoted in the next comment(s).  This will include the bug IDs of this\ntracking bug as well as the relevant top-level CVE bugs.\n\nPlease also mention the CVE IDs being fixed in the RPM changelog and the\nBodhi notes field when available.\n\nPlease note: this issue affects multiple supported versions of Fedora EPEL.\nOnly one tracking bug has been filed; please ensure that it is only closed\nwhen all affected versions are fixed.\n\n[bug automatically created by: add-tracking-bugs]"
					},
					{
						"isprivate": "0",
						"commentid": "6694250",
						"comment_count": "1",
						"who": {
							"text": "ratulg",
							"name": "Ratul Gupta"
						},
						"bug_when": "2014-01-10 09:38:35 +0000",
						"thetext": "\nPlease use the following update submission link to create the Bodhi\nrequest for this issue as it contains the top-level parent bug(s) as well\nas this tracking bug.  This will ensure that all associated bugs get\nupdated when new packages are pushed to stable.\n\nPlease also ensure that the \"Close bugs when update is stable\" option\nremains checked.\n\nBodhi update submission link:\nhttps://admin.fedoraproject.org/updates/new/?type_=security&bugs=1051421,1051425"
					},
					{
						"isprivate": "0",
						"commentid": "7156118",
						"comment_count": "3",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-07 13:51:36 +0000",
						"thetext": "python-jinja2-2.7.3-1.fc20 has been submitted as an update for Fedora 20.\nhttps://admin.fedoraproject.org/updates/python-jinja2-2.7.3-1.fc20"
					},
					{
						"isprivate": "0",
						"commentid": "7192652",
						"comment_count": "4",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-14 01:03:53 +0000",
						"thetext": "python-jinja2-2.2.1-2.el5 has been submitted as an update for Fedora EPEL 5.\nhttps://admin.fedoraproject.org/updates/python-jinja2-2.2.1-2.el5"
					},
					{
						"isprivate": "0",
						"commentid": "7192657",
						"comment_count": "5",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-14 01:08:22 +0000",
						"thetext": "python-jinja2-26-2.6-3.el6 has been submitted as an update for Fedora EPEL 6.\nhttps://admin.fedoraproject.org/updates/python-jinja2-26-2.6-3.el6"
					},
					{
						"isprivate": "0",
						"commentid": "7193084",
						"comment_count": "6",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-14 20:01:17 +0000",
						"thetext": "Package python-jinja2-26-2.6-3.el6:\n* should fix your issue,\n* was pushed to the Fedora EPEL 6 testing repository,\n* should be available at your local mirror within two days.\nUpdate it with:\n# su -c 'yum update --enablerepo=epel-testing python-jinja2-26-2.6-3.el6'\nas soon as you are able to.\nPlease go to the following url:\nhttps://admin.fedoraproject.org/updates/FEDORA-EPEL-2014-1649/python-jinja2-26-2.6-3.el6\nthen log in and leave karma (feedback)."
					},
					{
						"isprivate": "0",
						"commentid": "7247775",
						"comment_count": "7",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-30 03:38:12 +0000",
						"thetext": "python-jinja2-26-2.6-3.el6 has been pushed to the Fedora EPEL 6 stable repository.  If problems still persist, please make note of it in this bug report."
					},
					{
						"isprivate": "0",
						"commentid": "7247778",
						"comment_count": "8",
						"who": {
							"text": "updates",
							"name": "Fedora Update System"
						},
						"bug_when": "2014-06-30 03:38:35 +0000",
						"thetext": "python-jinja2-2.2.1-2.el5 has been pushed to the Fedora EPEL 5 stable repository.  If problems still persist, please make note of it in this bug report."
					}
				]
			}
		}
	],
	"builds": [
		{
			"nvr": "python-jinja2-2.2.1-2.el5",
			"signed": true,
			"type": "rpm",
			"package": {
				"i386": [
					{
						"name": "python-jinja2-debuginfo",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "i386"
					},
					{
						"name": "python-jinja2",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "i386"
					}
				],
				"ppc": [
					{
						"name": "python-jinja2-debuginfo",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "ppc"
					},
					{
						"name": "python-jinja2",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "ppc"
					}
				],
				"src": [
					{
						"name": "python-jinja2",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "src"
					}
				],
				"x86_64": [
					{
						"name": "python-jinja2",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "x86_64"
					},
					{
						"name": "python-jinja2-debuginfo",
						"version": "2.2.1",
						"release": "2.el5",
						"arch": "x86_64"
					}
				]
			}
		}
	],
	"close_bugs": true,
	"comments": [
		{
			"id": 147143,
			"text": "This update has been submitted for testing by thm. ",
			"timestamp": "2014-06-14 01:04:02",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147144,
			"text": "This update is currently being pushed to the Fedora EPEL 5 testing updates repository.",
			"timestamp": "2014-06-14 18:14:45",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147145,
			"text": "This update has been pushed to testing",
			"timestamp": "2014-06-14 20:01:37",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147146,
			"text": "This update has reached 14 days in testing and can be pushed to stable now if the maintainer wishes",
			"timestamp": "2014-06-28 23:27:10",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147147,
			"text": "This update has been submitted for stable by thm. ",
			"timestamp": "2014-06-29 21:39:34",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147148,
			"text": "This update is currently being pushed to the Fedora EPEL 5 stable updates repository.",
			"timestamp": "2014-06-30 01:47:55",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		},
		{
			"id": 147149,
			"text": "This update has been pushed to stable",
			"timestamp": "2014-06-30 03:38:44",
			"update_id": 19543,
			"user": {
				"avatar": "https://apps.fedoraproject.org/img/icons/bodhi-24.png",
				"id": 91,
				"name": "bodhi",
				"openid": "bodhi.id.fedoraproject.org"
			},
			"user_id": 91
		}
	],
	"content_type": "rpm",
	"date_pushed": "2014-06-30 03:38:44",
	"date_stable": "2014-06-30 03:38:44",
	"date_submitted": "2014-06-14 01:03:48",
	"date_testing": "2014-06-14 20:01:37",
	"meets_testing_requirements": true,
	"notes": "Add patch to fix CVE-2014-1402.",
	"pushed": true,
	"release": {
		"branch": "el5",
		"candidate_tag": "dist-5E-epel-testing-candidate",
		"composed_by_bodhi": true,
		"dist_tag": "dist-5E-epel",
		"id_prefix": "FEDORA-EPEL",
		"long_name": "Fedora EPEL 5",
		"mail_template": "fedora_epel_legacy_errata_template",
		"name": "EL-5",
		"override_tag": "dist-5E-epel-override",
		"package_manager": "unspecified",
		"stable_tag": "dist-5E-epel",
		"state": "archived",
		"testing_tag": "dist-5E-epel-testing",
		"version": "5"
	},
	"severity": "unspecified",
	"stable_karma": 3,
	"status": "stable",
	"suggest": "unspecified",
	"title": "python-jinja2-2.2.1-2.el5",
	"type": "security",
	"url": "https://bodhi.fedoraproject.org/updates/FEDORA-EPEL-2014-1651",
	"unstable_karma": -3,
	"updateid": "FEDORA-EPEL-2014-1651",
	"user": {
		"avatar": "https://seccdn.libravatar.org/avatar/9059004173d8a8bfddf2eb8c342af2c655aabe40786c6fffa5b0527680120734?s=24&d=retro",
		"email": "thomas.moschny@gmx.de",
		"groups": [
			{
				"name": "packager"
			},
			{
				"name": "ipausers"
			},
			{
				"name": "fedora-contributor"
			},
			{
				"name": "signed_fpca"
			},
			{
				"name": "fedorabugs"
			}
		],
		"id": 101,
		"name": "thm",
		"openid": "thm.id.fedoraproject.org"
	},
	"version_hash": "2a6baab715f5ab9aa7424971dfe331de47118913"
}
